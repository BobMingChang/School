LS(1)                         User Commands                        LS(1)
NAME         top
       ls - list directory contents
SYNOPSIS         top
       ls [OPTION]... [FILE]...
DESCRIPTION         top
       List information about the FILEs (the current directory by
       default).  Sort entries alphabetically if none of -cftuvSUX nor
       --sort is specified.

       Mandatory arguments to long options are mandatory for short
       options too.

       -a, --all
              do not ignore entries starting with .

       -A, --almost-all
              do not list implied . and ..

       --author
              with -l, print the author of each file

       -b, --escape
              print C-style escapes for nongraphic characters

       --block-size=SIZE
              with -l, scale sizes by SIZE when printing them; e.g.,
              '--block-size=M'; see SIZE format below

       -B, --ignore-backups
              do not list implied entries ending with ~

       -c     with -lt: sort by, and show, ctime (time of last
              modification of file status information); with -l: show
              ctime and sort by name; otherwise: sort by ctime, newest
              first

       -C     list entries by columns

       --color[=WHEN]
              colorize the output; WHEN can be 'always' (default if
              omitted), 'auto', or 'never'; more info below

       -d, --directory
              list directories themselves, not their contents

       -D, --dired
              generate output designed for Emacs' dired mode

       -f     do not sort, enable -aU, disable -ls --color

       -F, --classify
              append indicator (one of */=>@|) to entries

       --file-type
              likewise, except do not append '*'

       --format=WORD
              across -x, commas -m, horizontal -x, long -l,
              single-column -1, verbose -l, vertical -C

       --full-time
              like -l --time-style=full-iso

       -g     like -l, but do not list owner

       --group-directories-first
              group directories before files;

              can be augmented with a --sort option, but any use of
              --sort=none (-U) disables grouping

       -G, --no-group
              in a long listing, don't print group names

       -h, --human-readable
              with -l and -s, print sizes like 1K 234M 2G etc.

       --si   likewise, but use powers of 1000 not 1024

       -H, --dereference-command-line
              follow symbolic links listed on the command line

       --dereference-command-line-symlink-to-dir
              follow each command line symbolic link

              that points to a directory

       --hide=PATTERN
              do not list implied entries matching shell PATTERN
              (overridden by -a or -A)

       --hyperlink[=WHEN]
              hyperlink file names; WHEN can be 'always' (default if
              omitted), 'auto', or 'never'

       --indicator-style=WORD
              append indicator with style WORD to entry names: none
              (default), slash (-p), file-type (--file-type), classify
              (-F)

       -i, --inode
              print the index number of each file

       -I, --ignore=PATTERN
              do not list implied entries matching shell PATTERN

       -k, --kibibytes
              default to 1024-byte blocks for disk usage; used only with
              -s and per directory totals

       -l     use a long listing format

       -L, --dereference
              when showing file information for a symbolic link, show
              information for the file the link references rather than
              for the link itself

       -m     fill width with a comma separated list of entries

       -n, --numeric-uid-gid
              like -l, but list numeric user and group IDs

       -N, --literal
              print entry names without quoting

       -o     like -l, but do not list group information

       -p, --indicator-style=slash
              append / indicator to directories

       -q, --hide-control-chars
              print ? instead of nongraphic characters

       --show-control-chars
              show nongraphic characters as-is (the default, unless
              program is 'ls' and output is a terminal)

       -Q, --quote-name
              enclose entry names in double quotes

       --quoting-style=WORD
              use quoting style WORD for entry names: literal, locale,
              shell, shell-always, shell-escape, shell-escape-always, c,
              escape (overrides QUOTING_STYLE environment variable)

       -r, --reverse
              reverse order while sorting

       -R, --recursive
              list subdirectories recursively

       -s, --size
              print the allocated size of each file, in blocks

       -S     sort by file size, largest first

       --sort=WORD
              sort by WORD instead of name: none (-U), size (-S), time
              (-t), version (-v), extension (-X)

       --time=WORD
              change the default of using modification times; access
              time (-u): atime, access, use; change time (-c): ctime,
              status; birth time: birth, creation;

              with -l, WORD determines which time to show; with
              --sort=time, sort by WORD (newest first)

       --time-style=TIME_STYLE
              time/date format with -l; see TIME_STYLE below

       -t     sort by time, newest first; see --time

       -T, --tabsize=COLS
              assume tab stops at each COLS instead of 8

       -u     with -lt: sort by, and show, access time; with -l: show
              access time and sort by name; otherwise: sort by access
              time, newest first

       -U     do not sort; list entries in directory order

       -v     natural sort of (version) numbers within text

       -w, --width=COLS
              set output width to COLS.  0 means no limit

       -x     list entries by lines instead of by columns

       -X     sort alphabetically by entry extension

       -Z, --context
              print any security context of each file

       -1     list one file per line.  Avoid '\n' with -q or -b

       --help display this help and exit

       --version
              output version information and exit

       The SIZE argument is an integer and optional unit (example: 10K
       is 10*1024).  Units are K,M,G,T,P,E,Z,Y (powers of 1024) or
       KB,MB,... (powers of 1000).  Binary prefixes can be used, too:
       KiB=K, MiB=M, and so on.

       The TIME_STYLE argument can be full-iso, long-iso, iso, locale,
       or +FORMAT.  FORMAT is interpreted like in date(1).  If FORMAT is
       FORMAT1<newline>FORMAT2, then FORMAT1 applies to non-recent files
       and FORMAT2 to recent files.  TIME_STYLE prefixed with 'posix-'
       takes effect only outside the POSIX locale.  Also the TIME_STYLE
       environment variable sets the default style to use.

       Using color to distinguish file types is disabled both by default
       and with --color=never.  With --color=auto, ls emits color codes
       only when standard output is connected to a terminal.  The
       LS_COLORS environment variable can change the settings.  Use the
       dircolors command to set it.

   Exit status:
       0      if OK,

       1      if minor problems (e.g., cannot access subdirectory),

       2      if serious trouble (e.g., cannot access command-line
              argument).
AUTHOR         top
       Written by Richard M. Stallman and David MacKenzie.
REPORTING BUGS         top
       GNU coreutils online help:
       <https://www.gnu.org/software/coreutils/>
       Report any translation bugs to
       <https://translationproject.org/team/>
COPYRIGHT         top
       Copyright © 2020 Free Software Foundation, Inc.  License GPLv3+:
       GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.
       This is free software: you are free to change and redistribute
       it.  There is NO WARRANTY, to the extent permitted by law.
SEE ALSO         top
       Full documentation <https://www.gnu.org/software/coreutils/ls>
       or available locally via: info '(coreutils) ls invocation'
COLOPHON         top
       This page is part of the coreutils (basic file, shell and text
       manipulation utilities) project.  Information about the project
       can be found at ⟨http://www.gnu.org/software/coreutils/⟩.  If you
       have a bug report for this manual page, see
       ⟨http://www.gnu.org/software/coreutils/⟩.  This page was obtained
       from the tarball coreutils-8.32.tar.xz fetched from
       ⟨http://ftp.gnu.org/gnu/coreutils/⟩ on 2020-12-18.  If you
       discover any rendering problems in this HTML version of the page,
       or you believe there is a better or more up-to-date source for
       the page, or you have corrections or improvements to the
       information in this COLOPHON (which is not part of the original
       manual page), send a mail to man-pages@man7.org

GNU coreutils 8.32             March 2020                          LS(1)

CD(1P)                  POSIX Programmer's Manual                 CD(1P)
PROLOG         top
       This manual page is part of the POSIX Programmer's Manual.  The
       Linux implementation of this interface may differ (consult the
       corresponding Linux manual page for details of Linux behavior),
       or the interface may not be implemented on Linux.
NAME         top
       cd — change the working directory
SYNOPSIS         top
       cd [-L|-P] [directory]

       cd -
DESCRIPTION         top
       The cd utility shall change the working directory of the current
       shell execution environment (see Section 2.12, Shell Execution
       Environment) by executing the following steps in sequence. (In
       the following steps, the symbol curpath represents an
       intermediate value used to simplify the description of the
       algorithm used by cd.  There is no requirement that curpath be
       made visible to the application.)

        1. If no directory operand is given and the HOME environment
           variable is empty or undefined, the default behavior is
           implementation-defined and no further steps shall be taken.

        2. If no directory operand is given and the HOME environment
           variable is set to a non-empty value, the cd utility shall
           behave as if the directory named in the HOME environment
           variable was specified as the directory operand.

        3. If the directory operand begins with a <slash> character, set
           curpath to the operand and proceed to step 7.

        4. If the first component of the directory operand is dot or
           dot-dot, proceed to step 6.

        5. Starting with the first pathname in the <colon>-separated
           pathnames of CDPATH (see the ENVIRONMENT VARIABLES section)
           if the pathname is non-null, test if the concatenation of
           that pathname, a <slash> character if that pathname did not
           end with a <slash> character, and the directory operand names
           a directory. If the pathname is null, test if the
           concatenation of dot, a <slash> character, and the operand
           names a directory. In either case, if the resulting string
           names an existing directory, set curpath to that string and
           proceed to step 7. Otherwise, repeat this step with the next
           pathname in CDPATH until all pathnames have been tested.

        6. Set curpath to the directory operand.

        7. If the -P option is in effect, proceed to step 10. If curpath
           does not begin with a <slash> character, set curpath to the
           string formed by the concatenation of the value of PWD, a
           <slash> character if the value of PWD did not end with a
           <slash> character, and curpath.

        8. The curpath value shall then be converted to canonical form
           as follows, considering each component from beginning to end,
           in sequence:

            a. Dot components and any <slash> characters that separate
               them from the next component shall be deleted.

            b. For each dot-dot component, if there is a preceding
               component and it is neither root nor dot-dot, then:

                i.  If the preceding component does not refer (in the
                    context of pathname resolution with symbolic links
                    followed) to a directory, then the cd utility shall
                    display an appropriate error message and no further
                    steps shall be taken.

               ii.  The preceding component, all <slash> characters
                    separating the preceding component from dot-dot,
                    dot-dot, and all <slash> characters separating dot-
                    dot from the following component (if any) shall be
                    deleted.

            c. An implementation may further simplify curpath by
               removing any trailing <slash> characters that are not
               also leading <slash> characters, replacing multiple non-
               leading consecutive <slash> characters with a single
               <slash>, and replacing three or more leading <slash>
               characters with a single <slash>.  If, as a result of
               this canonicalization, the curpath variable is null, no
               further steps shall be taken.

        9. If curpath is longer than {PATH_MAX} bytes (including the
           terminating null) and the directory operand was not longer
           than {PATH_MAX} bytes (including the terminating null), then
           curpath shall be converted from an absolute pathname to an
           equivalent relative pathname if possible. This conversion
           shall always be considered possible if the value of PWD, with
           a trailing <slash> added if it does not already have one, is
           an initial substring of curpath.  Whether or not it is
           considered possible under other circumstances is unspecified.
           Implementations may also apply this conversion if curpath is
           not longer than {PATH_MAX} bytes or the directory operand was
           longer than {PATH_MAX} bytes.

       10. The cd utility shall then perform actions equivalent to the
           chdir() function called with curpath as the path argument. If
           these actions fail for any reason, the cd utility shall
           display an appropriate error message and the remainder of
           this step shall not be executed. If the -P option is not in
           effect, the PWD environment variable shall be set to the
           value that curpath had on entry to step 9 (i.e., before
           conversion to a relative pathname). If the -P option is in
           effect, the PWD environment variable shall be set to the
           string that would be output by pwd -P.  If there is
           insufficient permission on the new directory, or on any
           parent of that directory, to determine the current working
           directory, the value of the PWD environment variable is
           unspecified.

       If, during the execution of the above steps, the PWD environment
       variable is set, the OLDPWD environment variable shall also be
       set to the value of the old working directory (that is the
       current working directory immediately prior to the call to cd).
OPTIONS         top
       The cd utility shall conform to the Base Definitions volume of
       POSIX.1‐2017, Section 12.2, Utility Syntax Guidelines.

       The following options shall be supported by the implementation:

       -L        Handle the operand dot-dot logically; symbolic link
                 components shall not be resolved before dot-dot
                 components are processed (see steps 8.  and 9. in the
                 DESCRIPTION).

       -P        Handle the operand dot-dot physically; symbolic link
                 components shall be resolved before dot-dot components
                 are processed (see step 7. in the DESCRIPTION).

       If both -L and -P options are specified, the last of these
       options shall be used and all others ignored. If neither -L nor
       -P is specified, the operand shall be handled dot-dot logically;
       see the DESCRIPTION.
OPERANDS         top
       The following operands shall be supported:

       directory An absolute or relative pathname of the directory that
                 shall become the new working directory. The
                 interpretation of a relative pathname by cd depends on
                 the -L option and the CDPATH and PWD environment
                 variables. If directory is an empty string, the results
                 are unspecified.

       -         When a <hyphen-minus> is used as the operand, this
                 shall be equivalent to the command:

                     cd "$OLDPWD" && pwd

                 which changes to the previous working directory and
                 then writes its name.
STDIN         top
       Not used.
INPUT FILES         top
       None.
ENVIRONMENT VARIABLES         top
       The following environment variables shall affect the execution of
       cd:

       CDPATH    A <colon>-separated list of pathnames that refer to
                 directories. The cd utility shall use this list in its
                 attempt to change the directory, as described in the
                 DESCRIPTION. An empty string in place of a directory
                 pathname represents the current directory. If CDPATH is
                 not set, it shall be treated as if it were an empty
                 string.

       HOME      The name of the directory, used when no directory
                 operand is specified.

       LANG      Provide a default value for the internationalization
                 variables that are unset or null. (See the Base
                 Definitions volume of POSIX.1‐2017, Section 8.2,
                 Internationalization Variables for the precedence of
                 internationalization variables used to determine the
                 values of locale categories.)

       LC_ALL    If set to a non-empty string value, override the values
                 of all the other internationalization variables.

       LC_CTYPE  Determine the locale for the interpretation of
                 sequences of bytes of text data as characters (for
                 example, single-byte as opposed to multi-byte
                 characters in arguments).

       LC_MESSAGES
                 Determine the locale that should be used to affect the
                 format and contents of diagnostic messages written to
                 standard error.

       NLSPATH   Determine the location of message catalogs for the
                 processing of LC_MESSAGES.

       OLDPWD    A pathname of the previous working directory, used by
                 cd -.

       PWD       This variable shall be set as specified in the
                 DESCRIPTION. If an application sets or unsets the value
                 of PWD, the behavior of cd is unspecified.
ASYNCHRONOUS EVENTS         top
       Default.
STDOUT         top
       If a non-empty directory name from CDPATH is used, or if cd - is
       used, an absolute pathname of the new working directory shall be
       written to the standard output as follows:

           "%s\n", <new directory>

       Otherwise, there shall be no output.
STDERR         top
       The standard error shall be used only for diagnostic messages.
OUTPUT FILES         top
       None.
EXTENDED DESCRIPTION         top
       None.
EXIT STATUS         top
       The following exit values shall be returned:

        0    The directory was successfully changed.

       >0    An error occurred.
CONSEQUENCES OF ERRORS         top
       The working directory shall remain unchanged.

       The following sections are informative.
APPLICATION USAGE         top
       Since cd affects the current shell execution environment, it is
       always provided as a shell regular built-in. If it is called in a
       subshell or separate utility execution environment, such as one
       of the following:

           (cd /tmp)
           nohup cd
           find . -exec cd {} \;

       it does not affect the working directory of the caller's
       environment.

       The user must have execute (search) permission in directory in
       order to change to it.
EXAMPLES         top
       The following template can be used to perform processing in the
       directory specified by location and end up in the current working
       directory in use before the first cd command was issued:

           cd location
           if [ $? -ne 0 ]
           then
               print error message
               exit 1
           fi
           ... do whatever is desired as long as the OLDPWD environment variable
               is not modified
           cd -
RATIONALE         top
       The use of the CDPATH was introduced in the System V shell. Its
       use is analogous to the use of the PATH variable in the shell.
       The BSD C shell used a shell parameter cdpath for this purpose.

       A common extension when HOME is undefined is to get the login
       directory from the user database for the invoking user. This does
       not occur on System V implementations.

       Some historical shells, such as the KornShell, took special
       actions when the directory name contained a dot-dot component,
       selecting the logical parent of the directory, rather than the
       actual parent directory; that is, it moved up one level toward
       the '/' in the pathname, remembering what the user typed, rather
       than performing the equivalent of:

           chdir("..");

       In such a shell, the following commands would not necessarily
       produce equivalent output for all directories:

           cd .. && ls      ls ..

       This behavior is now the default. It is not consistent with the
       definition of dot-dot in most historical practice; that is, while
       this behavior has been optionally available in the KornShell,
       other shells have historically not supported this functionality.
       The logical pathname is stored in the PWD environment variable
       when the cd utility completes and this value is used to construct
       the next directory name if cd is invoked with the -L option.
FUTURE DIRECTIONS         top
       None.
SEE ALSO         top
       Section 2.12, Shell Execution Environment, pwd(1p)

       The Base Definitions volume of POSIX.1‐2017, Chapter 8,
       Environment Variables, Section 12.2, Utility Syntax Guidelines

       The System Interfaces volume of POSIX.1‐2017, chdir(3p)
COPYRIGHT         top
       Portions of this text are reprinted and reproduced in electronic
       form from IEEE Std 1003.1-2017, Standard for Information
       Technology -- Portable Operating System Interface (POSIX), The
       Open Group Base Specifications Issue 7, 2018 Edition, Copyright
       (C) 2018 by the Institute of Electrical and Electronics
       Engineers, Inc and The Open Group.  In the event of any
       discrepancy between this version and the original IEEE and The
       Open Group Standard, the original IEEE and The Open Group
       Standard is the referee document. The original Standard can be
       obtained online at http://www.opengroup.org/unix/online.html .

       Any typographical or formatting errors that appear in this page
       are most likely to have been introduced during the conversion of
       the source files to man page format. To report such errors, see
       https://www.kernel.org/doc/man-pages/reporting_bugs.html .

IEEE/The Open Group               2017                            CD(1P)

MKDIR(1)                      User Commands                     MKDIR(1)
NAME         top
       mkdir - make directories
SYNOPSIS         top
       mkdir [OPTION]... DIRECTORY...
DESCRIPTION         top
       Create the DIRECTORY(ies), if they do not already exist.

       Mandatory arguments to long options are mandatory for short
       options too.

       -m, --mode=MODE
              set file mode (as in chmod), not a=rwx - umask

       -p, --parents
              no error if existing, make parent directories as needed

       -v, --verbose
              print a message for each created directory

       -Z     set SELinux security context of each created directory to
              the default type

       --context[=CTX]
              like -Z, or if CTX is specified then set the SELinux or
              SMACK security context to CTX

       --help display this help and exit

       --version
              output version information and exit
AUTHOR         top
       Written by David MacKenzie.
REPORTING BUGS         top
       GNU coreutils online help:
       <https://www.gnu.org/software/coreutils/>
       Report any translation bugs to
       <https://translationproject.org/team/>
COPYRIGHT         top
       Copyright © 2020 Free Software Foundation, Inc.  License GPLv3+:
       GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.
       This is free software: you are free to change and redistribute
       it.  There is NO WARRANTY, to the extent permitted by law.
SEE ALSO         top
       mkdir(2)

       Full documentation <https://www.gnu.org/software/coreutils/mkdir>
       or available locally via: info '(coreutils) mkdir invocation'
COLOPHON         top
       This page is part of the coreutils (basic file, shell and text
       manipulation utilities) project.  Information about the project
       can be found at ⟨http://www.gnu.org/software/coreutils/⟩.  If you
       have a bug report for this manual page, see
       ⟨http://www.gnu.org/software/coreutils/⟩.  This page was obtained
       from the tarball coreutils-8.32.tar.xz fetched from
       ⟨http://ftp.gnu.org/gnu/coreutils/⟩ on 2020-12-18.  If you
       discover any rendering problems in this HTML version of the page,
       or you believe there is a better or more up-to-date source for
       the page, or you have corrections or improvements to the
       information in this COLOPHON (which is not part of the original
       manual page), send a mail to man-pages@man7.org

GNU coreutils 8.32             March 2020                       MKDIR(1)

RMDIR(1)                      User Commands                     RMDIR(1)
NAME         top
       rmdir - remove empty directories
SYNOPSIS         top
       rmdir [OPTION]... DIRECTORY...
DESCRIPTION         top
       Remove the DIRECTORY(ies), if they are empty.

       --ignore-fail-on-non-empty

              ignore each failure that is solely because a directory

              is non-empty

       -p, --parents
              remove DIRECTORY and its ancestors; e.g., 'rmdir -p a/b/c'
              is similar to 'rmdir a/b/c a/b a'

       -v, --verbose
              output a diagnostic for every directory processed

       --help display this help and exit

       --version
              output version information and exit
AUTHOR         top
       Written by David MacKenzie.
REPORTING BUGS         top
       GNU coreutils online help:
       <https://www.gnu.org/software/coreutils/>
       Report any translation bugs to
       <https://translationproject.org/team/>
COPYRIGHT         top
       Copyright © 2020 Free Software Foundation, Inc.  License GPLv3+:
       GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.
       This is free software: you are free to change and redistribute
       it.  There is NO WARRANTY, to the extent permitted by law.
SEE ALSO         top
       rmdir(2)

       Full documentation <https://www.gnu.org/software/coreutils/rmdir>
       or available locally via: info '(coreutils) rmdir invocation'
COLOPHON         top
       This page is part of the coreutils (basic file, shell and text
       manipulation utilities) project.  Information about the project
       can be found at ⟨http://www.gnu.org/software/coreutils/⟩.  If you
       have a bug report for this manual page, see
       ⟨http://www.gnu.org/software/coreutils/⟩.  This page was obtained
       from the tarball coreutils-8.32.tar.xz fetched from
       ⟨http://ftp.gnu.org/gnu/coreutils/⟩ on 2020-12-18.  If you
       discover any rendering problems in this HTML version of the page,
       or you believe there is a better or more up-to-date source for
       the page, or you have corrections or improvements to the
       information in this COLOPHON (which is not part of the original
       manual page), send a mail to man-pages@man7.org

GNU coreutils 8.32             March 2020                       RMDIR(1)

CP(1)                         User Commands                        CP(1)
NAME         top
       cp - copy files and directories
SYNOPSIS         top
       cp [OPTION]... [-T] SOURCE DEST
       cp [OPTION]... SOURCE... DIRECTORY
       cp [OPTION]... -t DIRECTORY SOURCE...
DESCRIPTION         top
       Copy SOURCE to DEST, or multiple SOURCE(s) to DIRECTORY.

       Mandatory arguments to long options are mandatory for short
       options too.

       -a, --archive
              same as -dR --preserve=all

       --attributes-only
              don't copy the file data, just the attributes

       --backup[=CONTROL]
              make a backup of each existing destination file

       -b     like --backup but does not accept an argument

       --copy-contents
              copy contents of special files when recursive

       -d     same as --no-dereference --preserve=links

       -f, --force
              if an existing destination file cannot be opened, remove
              it and try again (this option is ignored when the -n
              option is also used)

       -i, --interactive
              prompt before overwrite (overrides a previous -n option)

       -H     follow command-line symbolic links in SOURCE

       -l, --link
              hard link files instead of copying

       -L, --dereference
              always follow symbolic links in SOURCE

       -n, --no-clobber
              do not overwrite an existing file (overrides a previous -i
              option)

       -P, --no-dereference
              never follow symbolic links in SOURCE

       -p     same as --preserve=mode,ownership,timestamps

       --preserve[=ATTR_LIST]
              preserve the specified attributes (default:
              mode,ownership,timestamps), if possible additional
              attributes: context, links, xattr, all

       --no-preserve=ATTR_LIST
              don't preserve the specified attributes

       --parents
              use full source file name under DIRECTORY

       -R, -r, --recursive
              copy directories recursively

       --reflink[=WHEN]
              control clone/CoW copies. See below

       --remove-destination
              remove each existing destination file before attempting to
              open it (contrast with --force)

       --sparse=WHEN
              control creation of sparse files. See below

       --strip-trailing-slashes
              remove any trailing slashes from each SOURCE argument

       -s, --symbolic-link
              make symbolic links instead of copying

       -S, --suffix=SUFFIX
              override the usual backup suffix

       -t, --target-directory=DIRECTORY
              copy all SOURCE arguments into DIRECTORY

       -T, --no-target-directory
              treat DEST as a normal file

       -u, --update
              copy only when the SOURCE file is newer than the
              destination file or when the destination file is missing

       -v, --verbose
              explain what is being done

       -x, --one-file-system
              stay on this file system

       -Z     set SELinux security context of destination file to
              default type

       --context[=CTX]
              like -Z, or if CTX is specified then set the SELinux or
              SMACK security context to CTX

       --help display this help and exit

       --version
              output version information and exit

       By default, sparse SOURCE files are detected by a crude heuristic
       and the corresponding DEST file is made sparse as well.  That is
       the behavior selected by --sparse=auto.  Specify --sparse=always
       to create a sparse DEST file whenever the SOURCE file contains a
       long enough sequence of zero bytes.  Use --sparse=never to
       inhibit creation of sparse files.

       When --reflink[=always] is specified, perform a lightweight copy,
       where the data blocks are copied only when modified.  If this is
       not possible the copy fails, or if --reflink=auto is specified,
       fall back to a standard copy.  Use --reflink=never to ensure a
       standard copy is performed.

       The backup suffix is '~', unless set with --suffix or
       SIMPLE_BACKUP_SUFFIX.  The version control method may be selected
       via the --backup option or through the VERSION_CONTROL
       environment variable.  Here are the values:

       none, off
              never make backups (even if --backup is given)

       numbered, t
              make numbered backups

       existing, nil
              numbered if numbered backups exist, simple otherwise

       simple, never
              always make simple backups

       As a special case, cp makes a backup of SOURCE when the force and
       backup options are given and SOURCE and DEST are the same name
       for an existing, regular file.
AUTHOR         top
       Written by Torbjorn Granlund, David MacKenzie, and Jim Meyering.
REPORTING BUGS         top
       GNU coreutils online help:
       <https://www.gnu.org/software/coreutils/>
       Report any translation bugs to
       <https://translationproject.org/team/>
COPYRIGHT         top
       Copyright © 2020 Free Software Foundation, Inc.  License GPLv3+:
       GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.
       This is free software: you are free to change and redistribute
       it.  There is NO WARRANTY, to the extent permitted by law.
SEE ALSO         top
       Full documentation <https://www.gnu.org/software/coreutils/cp>
       or available locally via: info '(coreutils) cp invocation'
COLOPHON         top
       This page is part of the coreutils (basic file, shell and text
       manipulation utilities) project.  Information about the project
       can be found at ⟨http://www.gnu.org/software/coreutils/⟩.  If you
       have a bug report for this manual page, see
       ⟨http://www.gnu.org/software/coreutils/⟩.  This page was obtained
       from the tarball coreutils-8.32.tar.xz fetched from
       ⟨http://ftp.gnu.org/gnu/coreutils/⟩ on 2020-12-18.  If you
       discover any rendering problems in this HTML version of the page,
       or you believe there is a better or more up-to-date source for
       the page, or you have corrections or improvements to the
       information in this COLOPHON (which is not part of the original
       manual page), send a mail to man-pages@man7.org

GNU coreutils 8.32             March 2020                          CP(1)

RM(1)                         User Commands                        RM(1)
NAME         top
       rm - remove files or directories
SYNOPSIS         top
       rm [OPTION]... [FILE]...
DESCRIPTION         top
       This manual page documents the GNU version of rm.  rm removes
       each specified file.  By default, it does not remove directories.

       If the -I or --interactive=once option is given, and there are
       more than three files or the -r, -R, or --recursive are given,
       then rm prompts the user for whether to proceed with the entire
       operation.  If the response is not affirmative, the entire
       command is aborted.

       Otherwise, if a file is unwritable, standard input is a terminal,
       and the -f or --force option is not given, or the -i or
       --interactive=always option is given, rm prompts the user for
       whether to remove the file.  If the response is not affirmative,
       the file is skipped.
OPTIONS         top
       Remove (unlink) the FILE(s).

       -f, --force
              ignore nonexistent files and arguments, never prompt

       -i     prompt before every removal

       -I     prompt once before removing more than three files, or when
              removing recursively; less intrusive than -i, while still
              giving protection against most mistakes

       --interactive[=WHEN]
              prompt according to WHEN: never, once (-I), or always
              (-i); without WHEN, prompt always

       --one-file-system
              when removing a hierarchy recursively, skip any directory
              that is on a file system different from that of the
              corresponding command line argument

       --no-preserve-root
              do not treat '/' specially

       --preserve-root[=all]
              do not remove '/' (default); with 'all', reject any
              command line argument on a separate device from its parent

       -r, -R, --recursive
              remove directories and their contents recursively

       -d, --dir
              remove empty directories

       -v, --verbose
              explain what is being done

       --help display this help and exit

       --version
              output version information and exit

       By default, rm does not remove directories.  Use the --recursive
       (-r or -R) option to remove each listed directory, too, along
       with all of its contents.

       To remove a file whose name starts with a '-', for example
       '-foo', use one of these commands:

              rm -- -foo

              rm ./-foo

       Note that if you use rm to remove a file, it might be possible to
       recover some of its contents, given sufficient expertise and/or
       time.  For greater assurance that the contents are truly
       unrecoverable, consider using shred.
AUTHOR         top
       Written by Paul Rubin, David MacKenzie, Richard M. Stallman, and
       Jim Meyering.
REPORTING BUGS         top
       GNU coreutils online help:
       <https://www.gnu.org/software/coreutils/>
       Report any translation bugs to
       <https://translationproject.org/team/>
COPYRIGHT         top
       Copyright © 2020 Free Software Foundation, Inc.  License GPLv3+:
       GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.
       This is free software: you are free to change and redistribute
       it.  There is NO WARRANTY, to the extent permitted by law.
SEE ALSO         top
       unlink(1), unlink(2), chattr(1), shred(1)

       Full documentation <https://www.gnu.org/software/coreutils/rm>
       or available locally via: info '(coreutils) rm invocation'
COLOPHON         top
       This page is part of the coreutils (basic file, shell and text
       manipulation utilities) project.  Information about the project
       can be found at ⟨http://www.gnu.org/software/coreutils/⟩.  If you
       have a bug report for this manual page, see
       ⟨http://www.gnu.org/software/coreutils/⟩.  This page was obtained
       from the tarball coreutils-8.32.tar.xz fetched from
       ⟨http://ftp.gnu.org/gnu/coreutils/⟩ on 2020-12-18.  If you
       discover any rendering problems in this HTML version of the page,
       or you believe there is a better or more up-to-date source for
       the page, or you have corrections or improvements to the
       information in this COLOPHON (which is not part of the original
       manual page), send a mail to man-pages@man7.org

GNU coreutils 8.32             March 2020                          RM(1)

MV(1)                         User Commands                        MV(1)
NAME         top
       mv - move (rename) files
SYNOPSIS         top
       mv [OPTION]... [-T] SOURCE DEST
       mv [OPTION]... SOURCE... DIRECTORY
       mv [OPTION]... -t DIRECTORY SOURCE...
DESCRIPTION         top
       Rename SOURCE to DEST, or move SOURCE(s) to DIRECTORY.

       Mandatory arguments to long options are mandatory for short
       options too.

       --backup[=CONTROL]
              make a backup of each existing destination file

       -b     like --backup but does not accept an argument

       -f, --force
              do not prompt before overwriting

       -i, --interactive
              prompt before overwrite

       -n, --no-clobber
              do not overwrite an existing file

       If you specify more than one of -i, -f, -n, only the final one
       takes effect.

       --strip-trailing-slashes
              remove any trailing slashes from each SOURCE argument

       -S, --suffix=SUFFIX
              override the usual backup suffix

       -t, --target-directory=DIRECTORY
              move all SOURCE arguments into DIRECTORY

       -T, --no-target-directory
              treat DEST as a normal file

       -u, --update
              move only when the SOURCE file is newer than the
              destination file or when the destination file is missing

       -v, --verbose
              explain what is being done

       -Z, --context
              set SELinux security context of destination file to
              default type

       --help display this help and exit

       --version
              output version information and exit

       The backup suffix is '~', unless set with --suffix or
       SIMPLE_BACKUP_SUFFIX.  The version control method may be selected
       via the --backup option or through the VERSION_CONTROL
       environment variable.  Here are the values:

       none, off
              never make backups (even if --backup is given)

       numbered, t
              make numbered backups

       existing, nil
              numbered if numbered backups exist, simple otherwise

       simple, never
              always make simple backups
AUTHOR         top
       Written by Mike Parker, David MacKenzie, and Jim Meyering.
REPORTING BUGS         top
       GNU coreutils online help:
       <https://www.gnu.org/software/coreutils/>
       Report any translation bugs to
       <https://translationproject.org/team/>
COPYRIGHT         top
       Copyright © 2020 Free Software Foundation, Inc.  License GPLv3+:
       GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.
       This is free software: you are free to change and redistribute
       it.  There is NO WARRANTY, to the extent permitted by law.
SEE ALSO         top
       rename(2)

       Full documentation <https://www.gnu.org/software/coreutils/mv>
       or available locally via: info '(coreutils) mv invocation'
COLOPHON         top
       This page is part of the coreutils (basic file, shell and text
       manipulation utilities) project.  Information about the project
       can be found at ⟨http://www.gnu.org/software/coreutils/⟩.  If you
       have a bug report for this manual page, see
       ⟨http://www.gnu.org/software/coreutils/⟩.  This page was obtained
       from the tarball coreutils-8.32.tar.xz fetched from
       ⟨http://ftp.gnu.org/gnu/coreutils/⟩ on 2020-12-18.  If you
       discover any rendering problems in this HTML version of the page,
       or you believe there is a better or more up-to-date source for
       the page, or you have corrections or improvements to the
       information in this COLOPHON (which is not part of the original
       manual page), send a mail to man-pages@man7.org

GNU coreutils 8.32             March 2020                          MV(1)

CHMOD(1)                      User Commands                     CHMOD(1)
NAME         top
       chmod - change file mode bits
SYNOPSIS         top
       chmod [OPTION]... MODE[,MODE]... FILE...
       chmod [OPTION]... OCTAL-MODE FILE...
       chmod [OPTION]... --reference=RFILE FILE...
DESCRIPTION         top
       This manual page documents the GNU version of chmod.  chmod
       changes the file mode bits of each given file according to mode,
       which can be either a symbolic representation of changes to make,
       or an octal number representing the bit pattern for the new mode
       bits.

       The format of a symbolic mode is [ugoa...][[-+=][perms...]...],
       where perms is either zero or more letters from the set rwxXst,
       or a single letter from the set ugo.  Multiple symbolic modes can
       be given, separated by commas.

       A combination of the letters ugoa controls which users' access to
       the file will be changed: the user who owns it (u), other users
       in the file's group (g), other users not in the file's group (o),
       or all users (a).  If none of these are given, the effect is as
       if (a) were given, but bits that are set in the umask are not
       affected.

       The operator + causes the selected file mode bits to be added to
       the existing file mode bits of each file; - causes them to be
       removed; and = causes them to be added and causes unmentioned
       bits to be removed except that a directory's unmentioned set user
       and group ID bits are not affected.

       The letters rwxXst select file mode bits for the affected users:
       read (r), write (w), execute (or search for directories) (x),
       execute/search only if the file is a directory or already has
       execute permission for some user (X), set user or group ID on
       execution (s), restricted deletion flag or sticky bit (t).
       Instead of one or more of these letters, you can specify exactly
       one of the letters ugo: the permissions granted to the user who
       owns the file (u), the permissions granted to other users who are
       members of the file's group (g), and the permissions granted to
       users that are in neither of the two preceding categories (o).

       A numeric mode is from one to four octal digits (0-7), derived by
       adding up the bits with values 4, 2, and 1.  Omitted digits are
       assumed to be leading zeros.  The first digit selects the set
       user ID (4) and set group ID (2) and restricted deletion or
       sticky (1) attributes.  The second digit selects permissions for
       the user who owns the file: read (4), write (2), and execute (1);
       the third selects permissions for other users in the file's
       group, with the same values; and the fourth for other users not
       in the file's group, with the same values.

       chmod never changes the permissions of symbolic links; the chmod
       system call cannot change their permissions.  This is not a
       problem since the permissions of symbolic links are never used.
       However, for each symbolic link listed on the command line, chmod
       changes the permissions of the pointed-to file.  In contrast,
       chmod ignores symbolic links encountered during recursive
       directory traversals.
SETUID AND SETGID BITS         top
       chmod clears the set-group-ID bit of a regular file if the file's
       group ID does not match the user's effective group ID or one of
       the user's supplementary group IDs, unless the user has
       appropriate privileges.  Additional restrictions may cause the
       set-user-ID and set-group-ID bits of MODE or RFILE to be ignored.
       This behavior depends on the policy and functionality of the
       underlying chmod system call.  When in doubt, check the
       underlying system behavior.

       For directories chmod preserves set-user-ID and set-group-ID bits
       unless you explicitly specify otherwise.  You can set or clear
       the bits with symbolic modes like u+s and g-s.  To clear these
       bits for directories with a numeric mode requires an additional
       leading zero, or leading = like 00755 , or =755
RESTRICTED DELETION FLAG OR STICKY BIT         top
       The restricted deletion flag or sticky bit is a single bit, whose
       interpretation depends on the file type.  For directories, it
       prevents unprivileged users from removing or renaming a file in
       the directory unless they own the file or the directory; this is
       called the restricted deletion flag for the directory, and is
       commonly found on world-writable directories like /tmp.  For
       regular files on some older systems, the bit saves the program's
       text image on the swap device so it will load more quickly when
       run; this is called the sticky bit.
OPTIONS         top
       Change the mode of each FILE to MODE.  With --reference, change
       the mode of each FILE to that of RFILE.

       -c, --changes
              like verbose but report only when a change is made

       -f, --silent, --quiet
              suppress most error messages

       -v, --verbose
              output a diagnostic for every file processed

       --no-preserve-root
              do not treat '/' specially (the default)

       --preserve-root
              fail to operate recursively on '/'

       --reference=RFILE
              use RFILE's mode instead of MODE values

       -R, --recursive
              change files and directories recursively

       --help display this help and exit

       --version
              output version information and exit

       Each MODE is of the form
       '[ugoa]*([-+=]([rwxXst]*|[ugo]))+|[-+=][0-7]+'.
AUTHOR         top
       Written by David MacKenzie and Jim Meyering.
REPORTING BUGS         top
       GNU coreutils online help:
       <https://www.gnu.org/software/coreutils/>
       Report any translation bugs to
       <https://translationproject.org/team/>
COPYRIGHT         top
       Copyright © 2020 Free Software Foundation, Inc.  License GPLv3+:
       GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.
       This is free software: you are free to change and redistribute
       it.  There is NO WARRANTY, to the extent permitted by law.
SEE ALSO         top
       chmod(2)

       Full documentation <https://www.gnu.org/software/coreutils/chmod>
       or available locally via: info '(coreutils) chmod invocation'
COLOPHON         top
       This page is part of the coreutils (basic file, shell and text
       manipulation utilities) project.  Information about the project
       can be found at ⟨http://www.gnu.org/software/coreutils/⟩.  If you
       have a bug report for this manual page, see
       ⟨http://www.gnu.org/software/coreutils/⟩.  This page was obtained
       from the tarball coreutils-8.32.tar.xz fetched from
       ⟨http://ftp.gnu.org/gnu/coreutils/⟩ on 2020-12-18.  If you
       discover any rendering problems in this HTML version of the page,
       or you believe there is a better or more up-to-date source for
       the page, or you have corrections or improvements to the
       information in this COLOPHON (which is not part of the original
       manual page), send a mail to man-pages@man7.org

GNU coreutils 8.32             March 2020                       CHMOD(1)

MAN(1)                     Manual pager utils                     MAN(1)
NAME         top
       man - an interface to the system reference manuals
SYNOPSIS         top
       man [man options] [[section] page ...] ...
       man -k [apropos options] regexp ...
       man -K [man options] [section] term ...
       man -f [whatis options] page ...
       man -l [man options] file ...
       man -w|-W [man options] page ...
DESCRIPTION         top
       man is the system's manual pager.  Each page argument given to
       man is normally the name of a program, utility or function.  The
       manual page associated with each of these arguments is then found
       and displayed.  A section, if provided, will direct man to look
       only in that section of the manual.  The default action is to
       search in all of the available sections following a pre-defined
       order (see DEFAULTS), and to show only the first page found, even
       if page exists in several sections.

       The table below shows the section numbers of the manual followed
       by the types of pages they contain.

       1   Executable programs or shell commands
       2   System calls (functions provided by the kernel)
       3   Library calls (functions within program libraries)
       4   Special files (usually found in /dev)
       5   File formats and conventions, e.g. /etc/passwd
       6   Games
       7   Miscellaneous (including macro packages and conventions),
           e.g. man(7), groff(7)
       8   System administration commands (usually only for root)
       9   Kernel routines [Non standard]

       A manual page consists of several sections.

       Conventional section names include NAME, SYNOPSIS, CONFIGURATION,
       DESCRIPTION, OPTIONS, EXIT STATUS, RETURN VALUE, ERRORS,
       ENVIRONMENT, FILES, VERSIONS, CONFORMING TO, NOTES, BUGS,
       EXAMPLE, AUTHORS, and SEE ALSO.

       The following conventions apply to the SYNOPSIS section and can
       be used as a guide in other sections.

       bold text          type exactly as shown.
       italic text        replace with appropriate argument.
       [-abc]             any or all arguments within [ ] are optional.
       -a|-b              options delimited by | cannot be used
                          together.
       argument ...       argument is repeatable.
       [expression] ...   entire expression within [ ] is repeatable.

       Exact rendering may vary depending on the output device.  For
       instance, man will usually not be able to render italics when
       running in a terminal, and will typically use underlined or
       coloured text instead.

       The command or function illustration is a pattern that should
       match all possible invocations.  In some cases it is advisable to
       illustrate several exclusive invocations as is shown in the
       SYNOPSIS section of this manual page.
EXAMPLES         top
       man ls
           Display the manual page for the item (program) ls.

       man man.7
           Display the manual page for macro package man from section 7.
           (This is an alternative spelling of "man 7 man".)

       man 'man(7)'
           Display the manual page for macro package man from section 7.
           (This is another alternative spelling of "man 7 man".  It may
           be more convenient when copying and pasting cross-references
           to manual pages.  Note that the parentheses must normally be
           quoted to protect them from the shell.)

       man -a intro
           Display, in succession, all of the available intro manual
           pages contained within the manual.  It is possible to quit
           between successive displays or skip any of them.

       man -t bash | lpr -Pps
           Format the manual page for bash into the default troff or
           groff format and pipe it to the printer named ps.  The
           default output for groff is usually PostScript.  man --help
           should advise as to which processor is bound to the -t
           option.

       man -l -Tdvi ./foo.1x.gz > ./foo.1x.dvi
           This command will decompress and format the nroff source
           manual page ./foo.1x.gz into a device independent (dvi) file.
           The redirection is necessary as the -T flag causes output to
           be directed to stdout with no pager.  The output could be
           viewed with a program such as xdvi or further processed into
           PostScript using a program such as dvips.

       man -k printf
           Search the short descriptions and manual page names for the
           keyword printf as regular expression.  Print out any matches.
           Equivalent to apropos printf.

       man -f smail
           Lookup the manual pages referenced by smail and print out the
           short descriptions of any found.  Equivalent to whatis smail.
OVERVIEW         top
       Many options are available to man in order to give as much
       flexibility as possible to the user.  Changes can be made to the
       search path, section order, output processor, and other
       behaviours and operations detailed below.

       If set, various environment variables are interrogated to
       determine the operation of man.  It is possible to set the
       "catch-all" variable $MANOPT to any string in command line
       format, with the exception that any spaces used as part of an
       option's argument must be escaped (preceded by a backslash).  man
       will parse $MANOPT prior to parsing its own command line.  Those
       options requiring an argument will be overridden by the same
       options found on the command line.  To reset all of the options
       set in $MANOPT, -D can be specified as the initial command line
       option.  This will allow man to "forget" about the options
       specified in $MANOPT, although they must still have been valid.

       Manual pages are normally stored in nroff(1) format under a
       directory such as /usr/share/man.  In some installations, there
       may also be preformatted cat pages to improve performance.  See
       manpath(5) for details of where these files are stored.

       This package supports manual pages in multiple languages,
       controlled by your locale.  If your system did not set this up
       for you automatically, then you may need to set $LC_MESSAGES,
       $LANG, or another system-dependent environment variable to
       indicate your preferred locale, usually specified in the POSIX
       format:

       <language>[_<territory>[.<character-set>[,<version>]]]

       If the desired page is available in your locale, it will be
       displayed in lieu of the standard (usually American English)
       page.

       If you find that the translations supplied with this package are
       not available in your native language and you would like to
       supply them, please contact the maintainer who will be
       coordinating such activity.

       Individual manual pages are normally written and maintained by
       the maintainers of the program, function, or other topic that
       they document, and are not included with this package.  If you
       find that a manual page is missing or inadequate, please report
       that to the maintainers of the package in question.

       For information regarding other features and extensions available
       with this manual pager, please read the documents supplied with
       the package.
DEFAULTS         top
       The order of sections to search may be overridden by the
       environment variable $MANSECT or by the SECTION directive in
       /usr/local/etc/man_db.conf.  By default it is as follows:

              1 n l 8 3 0 2 5 4 9 6 7

       The formatted manual page is displayed using a pager.  This can
       be specified in a number of ways, or else will fall back to a
       default (see option -P for details).

       The filters are deciphered by a number of means.  Firstly, the
       command line option -p or the environment variable $MANROFFSEQ is
       interrogated.  If -p was not used and the environment variable
       was not set, the initial line of the nroff file is parsed for a
       preprocessor string.  To contain a valid preprocessor string, the
       first line must resemble

       '\" <string>

       where string can be any combination of letters described by
       option -p below.

       If none of the above methods provide any filter information, a
       default set is used.

       A formatting pipeline is formed from the filters and the primary
       formatter (nroff or [tg]roff with -t) and executed.
       Alternatively, if an executable program mandb_nfmt (or mandb_tfmt
       with -t) exists in the man tree root, it is executed instead.  It
       gets passed the manual source file, the preprocessor string, and
       optionally the device specified with -T or -E as arguments.
OPTIONS         top
       Non-argument options that are duplicated either on the command
       line, in $MANOPT, or both, are not harmful.  For options that
       require an argument, each duplication will override the previous
       argument value.

   General options
       -C file, --config-file=file
              Use this user configuration file rather than the default
              of ~/.manpath.

       -d, --debug
              Print debugging information.

       -D, --default
              This option is normally issued as the very first option
              and resets man's behaviour to its default.  Its use is to
              reset those options that may have been set in $MANOPT.
              Any options that follow -D will have their usual effect.

       --warnings[=warnings]
              Enable warnings from groff.  This may be used to perform
              sanity checks on the source text of manual pages.
              warnings is a comma-separated list of warning names; if it
              is not supplied, the default is "mac".  See the “Warnings”
              node in info groff for a list of available warning names.

   Main modes of operation
       -f, --whatis
              Equivalent to whatis.  Display a short description from
              the manual page, if available.  See whatis(1) for details.

       -k, --apropos
              Equivalent to apropos.  Search the short manual page
              descriptions for keywords and display any matches.  See
              apropos(1) for details.

       -K, --global-apropos
              Search for text in all manual pages.  This is a brute-
              force search, and is likely to take some time; if you can,
              you should specify a section to reduce the number of pages
              that need to be searched.  Search terms may be simple
              strings (the default), or regular expressions if the
              --regex option is used.

              Note that this searches the sources of the manual pages,
              not the rendered text, and so may include false positives
              due to things like comments in source files.  Searching
              the rendered text would be much slower.

       -l, --local-file
              Activate "local" mode.  Format and display local manual
              files instead of searching through the system's manual
              collection.  Each manual page argument will be interpreted
              as an nroff source file in the correct format.  No cat
              file is produced.  If '-' is listed as one of the
              arguments, input will be taken from stdin.  When this
              option is not used, and man fails to find the page
              required, before displaying the error message, it attempts
              to act as if this option was supplied, using the name as a
              filename and looking for an exact match.

       -w, --where, --path, --location
              Don't actually display the manual page, but do print the
              location of the source nroff file that would be formatted.
              If the -a option is also used, then print the locations of
              all source files that match the search criteria.

       -W, --where-cat, --location-cat
              Don't actually display the manual page, but do print the
              location of the preformatted cat file that would be
              displayed.  If the -a option is also used, then print the
              locations of all preformatted cat files that match the
              search criteria.

              If -w and -W are both used, then print both source file
              and cat file separated by a space.  If all of -w, -W, and
              -a are used, then do this for each possible match.

       -c, --catman
              This option is not for general use and should only be used
              by the catman program.

       -R encoding, --recode=encoding
              Instead of formatting the manual page in the usual way,
              output its source converted to the specified encoding.  If
              you already know the encoding of the source file, you can
              also use manconv(1) directly.  However, this option allows
              you to convert several manual pages to a single encoding
              without having to explicitly state the encoding of each,
              provided that they were already installed in a structure
              similar to a manual page hierarchy.

              Consider using @TRANS_MAN_RECODE@(1) instead for
              converting multiple manual pages, since it has an
              interface designed for bulk conversion and so can be much
              faster.

   Finding manual pages
       -L locale, --locale=locale
              man will normally determine your current locale by a call
              to the C function setlocale(3) which interrogates various
              environment variables, possibly including $LC_MESSAGES and
              $LANG.  To temporarily override the determined value, use
              this option to supply a locale string directly to man.
              Note that it will not take effect until the search for
              pages actually begins.  Output such as the help message
              will always be displayed in the initially determined
              locale.

       -m system[,...], --systems=system[,...]
              If this system has access to other operating system's
              manual pages, they can be accessed using this option.  To
              search for a manual page from NewOS's manual page
              collection, use the option -m NewOS.

              The system specified can be a combination of comma
              delimited operating system names.  To include a search of
              the native operating system's manual pages, include the
              system name man in the argument string.  This option will
              override the $SYSTEM environment variable.

       -M path, --manpath=path
              Specify an alternate manpath to use.  By default, man uses
              manpath derived code to determine the path to search.
              This option overrides the $MANPATH environment variable
              and causes option -m to be ignored.

              A path specified as a manpath must be the root of a manual
              page hierarchy structured into sections as described in
              the man-db manual (under "The manual page system").  To
              view manual pages outside such hierarchies, see the -l
              option.

       -S list, -s list, --sections=list
              The given list is a colon- or comma-separated list of
              sections, used to determine which manual sections to
              search and in what order.  This option overrides the
              $MANSECT environment variable.  (The -s spelling is for
              compatibility with System V.)

       -e sub-extension, --extension=sub-extension
              Some systems incorporate large packages of manual pages,
              such as those that accompany the Tcl package, into the
              main manual page hierarchy.  To get around the problem of
              having two manual pages with the same name such as
              exit(3), the Tcl pages were usually all assigned to
              section l.  As this is unfortunate, it is now possible to
              put the pages in the correct section, and to assign a
              specific "extension" to them, in this case, exit(3tcl).
              Under normal operation, man will display exit(3) in
              preference to exit(3tcl).  To negotiate this situation and
              to avoid having to know which section the page you require
              resides in, it is now possible to give man a sub-extension
              string indicating which package the page must belong to.
              Using the above example, supplying the option -e tcl to
              man will restrict the search to pages having an extension
              of *tcl.

       -i, --ignore-case
              Ignore case when searching for manual pages.  This is the
              default.

       -I, --match-case
              Search for manual pages case-sensitively.

       --regex
              Show all pages with any part of either their names or
              their descriptions matching each page argument as a
              regular expression, as with apropos(1).  Since there is
              usually no reasonable way to pick a "best" page when
              searching for a regular expression, this option implies
              -a.

       --wildcard
              Show all pages with any part of either their names or
              their descriptions matching each page argument using
              shell-style wildcards, as with apropos(1) --wildcard.  The
              page argument must match the entire name or description,
              or match on word boundaries in the description.  Since
              there is usually no reasonable way to pick a "best" page
              when searching for a wildcard, this option implies -a.

       --names-only
              If the --regex or --wildcard option is used, match only
              page names, not page descriptions, as with whatis(1).
              Otherwise, no effect.

       -a, --all
              By default, man will exit after displaying the most
              suitable manual page it finds.  Using this option forces
              man to display all the manual pages with names that match
              the search criteria.

       -u, --update
              This option causes man to update its database caches of
              installed manual pages.  This is only needed in rare
              situations, and it is normally better to run mandb(8)
              instead.

       --no-subpages
              By default, man will try to interpret pairs of manual page
              names given on the command line as equivalent to a single
              manual page name containing a hyphen or an underscore.
              This supports the common pattern of programs that
              implement a number of subcommands, allowing them to
              provide manual pages for each that can be accessed using
              similar syntax as would be used to invoke the subcommands
              themselves.  For example:

                $ man -aw git diff
                /usr/share/man/man1/git-diff.1.gz

              To disable this behaviour, use the --no-subpages option.

                $ man -aw --no-subpages git diff
                /usr/share/man/man1/git.1.gz
                /usr/share/man/man3/Git.3pm.gz
                /usr/share/man/man1/diff.1.gz

   Controlling formatted output
       -P pager, --pager=pager
              Specify which output pager to use.  By default, man uses
              less, falling back to cat if less is not found or is not
              executable.  This option overrides the $MANPAGER
              environment variable, which in turn overrides the $PAGER
              environment variable.  It is not used in conjunction with
              -f or -k.

              The value may be a simple command name or a command with
              arguments, and may use shell quoting (backslashes, single
              quotes, or double quotes).  It may not use pipes to
              connect multiple commands; if you need that, use a wrapper
              script, which may take the file to display either as an
              argument or on standard input.

       -r prompt, --prompt=prompt
              If a recent version of less is used as the pager, man will
              attempt to set its prompt and some sensible options.  The
              default prompt looks like

               Manual page name(sec) line x

              where name denotes the manual page name, sec denotes the
              section it was found under and x the current line number.
              This is achieved by using the $LESS environment variable.

              Supplying -r with a string will override this default.
              The string may contain the text $MAN_PN which will be
              expanded to the name of the current manual page and its
              section name surrounded by "(" and ")".  The string used
              to produce the default could be expressed as

              \ Manual\ page\ \$MAN_PN\ ?ltline\ %lt?L/%L.:
              byte\ %bB?s/%s..?\ (END):?pB\ %pB\\%..
              (press h for help or q to quit)

              It is broken into three lines here for the sake of
              readability only.  For its meaning see the less(1) manual
              page.  The prompt string is first evaluated by the shell.
              All double quotes, back-quotes and backslashes in the
              prompt must be escaped by a preceding backslash.  The
              prompt string may end in an escaped $ which may be
              followed by further options for less.  By default man sets
              the -ix8 options.

              The $MANLESS environment variable described below may be
              used to set a default prompt string if none is supplied on
              the command line.

       -7, --ascii
              When viewing a pure ascii(7) manual page on a 7 bit
              terminal or terminal emulator, some characters may not
              display correctly when using the latin1(7) device
              description with GNU nroff.  This option allows pure ascii
              manual pages to be displayed in ascii with the latin1
              device.  It will not translate any latin1 text.  The
              following table shows the translations performed: some
              parts of it may only be displayed properly when using GNU
              nroff's latin1(7) device.

              Description      Octal   latin1   ascii
              ────────────────────────────────────────
              continuation      255      ‐        -
              hyphen
              bullet (middle    267      •        o
              dot)
              acute accent      264      ´        '
              multiplication    327      ×        x
              sign

              If the latin1 column displays correctly, your terminal may
              be set up for latin1 characters and this option is not
              necessary.  If the latin1 and ascii columns are identical,
              you are reading this page using this option or man did not
              format this page using the latin1 device description.  If
              the latin1 column is missing or corrupt, you may need to
              view manual pages with this option.

              This option is ignored when using options -t, -H, -T, or
              -Z and may be useless for nroff other than GNU's.

       -E encoding, --encoding=encoding
              Generate output for a character encoding other than the
              default.  For backward compatibility, encoding may be an
              nroff device such as ascii, latin1, or utf8 as well as a
              true character encoding such as UTF-8.

       --no-hyphenation, --nh
              Normally, nroff will automatically hyphenate text at line
              breaks even in words that do not contain hyphens, if it is
              necessary to do so to lay out words on a line without
              excessive spacing.  This option disables automatic
              hyphenation, so words will only be hyphenated if they
              already contain hyphens.

              If you are writing a manual page and simply want to
              prevent nroff from hyphenating a word at an inappropriate
              point, do not use this option, but consult the nroff
              documentation instead; for instance, you can put "\%"
              inside a word to indicate that it may be hyphenated at
              that point, or put "\%" at the start of a word to prevent
              it from being hyphenated.

       --no-justification, --nj
              Normally, nroff will automatically justify text to both
              margins.  This option disables full justification, leaving
              justified only to the left margin, sometimes called
              "ragged-right" text.

              If you are writing a manual page and simply want to
              prevent nroff from justifying certain paragraphs, do not
              use this option, but consult the nroff documentation
              instead; for instance, you can use the ".na", ".nf",
              ".fi", and ".ad" requests to temporarily disable adjusting
              and filling.

       -p string, --preprocessor=string
              Specify the sequence of preprocessors to run before nroff
              or troff/groff.  Not all installations will have a full
              set of preprocessors.  Some of the preprocessors and the
              letters used to designate them are: eqn (e), grap (g), pic
              (p), tbl (t), vgrind (v), refer (r).  This option
              overrides the $MANROFFSEQ environment variable.  zsoelim
              is always run as the very first preprocessor.

       -t, --troff
              Use @troff_as_troff_input@ to format the manual page to
              stdout.  This option is not required in conjunction with
              -H, -T, or -Z.

       -T[device], --troff-device[=device]
              This option is used to change groff (or possibly troff's)
              output to be suitable for a device other than the default.
              It implies -t.  Examples (provided with Groff-1.17)
              include dvi, latin1, ps, utf8, X75 and X100.

       -H[browser], --html[=browser]
              This option will cause groff to produce HTML output, and
              will display that output in a web browser.  The choice of
              browser is determined by the optional browser argument if
              one is provided, by the $BROWSER environment variable, or
              by a compile-time default if that is unset (usually lynx).
              This option implies -t, and will only work with GNU troff.

       -X[dpi], --gxditview[=dpi]
              This option displays the output of groff in a graphical
              window using the gxditview program.  The dpi (dots per
              inch) may be 75, 75-12, 100, or 100-12, defaulting to 75;
              the -12 variants use a 12-point base font.  This option
              implies -T with the X75, X75-12, X100, or X100-12 device
              respectively.

       -Z, --ditroff
              groff will run troff and then use an appropriate post-
              processor to produce output suitable for the chosen
              device.  If @troff_as_troff_input@ is groff, this option
              is passed to groff and will suppress the use of a post-
              processor.  It implies -t.

   Getting help
       -?, --help
              Print a help message and exit.

       --usage
              Print a short usage message and exit.

       -V, --version
              Display version information.
EXIT STATUS         top
       0      Successful program execution.

       1      Usage, syntax or configuration file error.

       2      Operational error.

       3      A child process returned a non-zero exit status.

       16     At least one of the pages/files/keywords didn't exist or
              wasn't matched.
ENVIRONMENT         top
       MANPATH
              If $MANPATH is set, its value is used as the path to
              search for manual pages.

       MANROFFOPT
              Every time man invokes the formatter (nroff, troff, or
              groff), it adds the contents of $MANROFFOPT to the
              formatter's command line.

       MANROFFSEQ
              If $MANROFFSEQ is set, its value is used to determine the
              set of preprocessors to pass each manual page through.
              The default preprocessor list is system dependent.

       MANSECT
              If $MANSECT is set, its value is a colon-delimited list of
              sections and it is used to determine which manual sections
              to search and in what order.  The default is "1 n l 8 3 0
              2 5 4 9 6 7", unless overridden by the SECTION directive
              in /usr/local/etc/man_db.conf.

       MANPAGER, PAGER
              If $MANPAGER or $PAGER is set ($MANPAGER is used in
              preference), its value is used as the name of the program
              used to display the manual page.  By default, less is
              used, falling back to cat if less is not found or is not
              executable.

              The value may be a simple command name or a command with
              arguments, and may use shell quoting (backslashes, single
              quotes, or double quotes).  It may not use pipes to
              connect multiple commands; if you need that, use a wrapper
              script, which may take the file to display either as an
              argument or on standard input.

       MANLESS
              If $MANLESS is set, its value will be used as the default
              prompt string for the less pager, as if it had been passed
              using the -r option (so any occurrences of the text
              $MAN_PN will be expanded in the same way).  For example,
              if you want to set the prompt string unconditionally to
              “my prompt string”, set $MANLESS to ‘-Psmy prompt string’.
              Using the -r option overrides this environment variable.

       BROWSER
              If $BROWSER is set, its value is a colon-delimited list of
              commands, each of which in turn is used to try to start a
              web browser for man --html.  In each command, %s is
              replaced by a filename containing the HTML output from
              groff, %% is replaced by a single percent sign (%), and %c
              is replaced by a colon (:).

       SYSTEM If $SYSTEM is set, it will have the same effect as if it
              had been specified as the argument to the -m option.

       MANOPT If $MANOPT is set, it will be parsed prior to man's
              command line and is expected to be in a similar format.
              As all of the other man specific environment variables can
              be expressed as command line options, and are thus
              candidates for being included in $MANOPT it is expected
              that they will become obsolete.  N.B.  All spaces that
              should be interpreted as part of an option's argument must
              be escaped.

       MANWIDTH
              If $MANWIDTH is set, its value is used as the line length
              for which manual pages should be formatted.  If it is not
              set, manual pages will be formatted with a line length
              appropriate to the current terminal (using the value of
              $COLUMNS, and ioctl(2) if available, or falling back to 80
              characters if neither is available).  Cat pages will only
              be saved when the default formatting can be used, that is
              when the terminal line length is between 66 and 80
              characters.

       MAN_KEEP_FORMATTING
              Normally, when output is not being directed to a terminal
              (such as to a file or a pipe), formatting characters are
              discarded to make it easier to read the result without
              special tools.  However, if $MAN_KEEP_FORMATTING is set to
              any non-empty value, these formatting characters are
              retained.  This may be useful for wrappers around man that
              can interpret formatting characters.

       MAN_KEEP_STDERR
              Normally, when output is being directed to a terminal
              (usually to a pager), any error output from the command
              used to produce formatted versions of manual pages is
              discarded to avoid interfering with the pager's display.
              Programs such as groff often produce relatively minor
              error messages about typographical problems such as poor
              alignment, which are unsightly and generally confusing
              when displayed along with the manual page.  However, some
              users want to see them anyway, so, if $MAN_KEEP_STDERR is
              set to any non-empty value, error output will be displayed
              as usual.

       LANG, LC_MESSAGES
              Depending on system and implementation, either or both of
              $LANG and $LC_MESSAGES will be interrogated for the
              current message locale.  man will display its messages in
              that locale (if available).  See setlocale(3) for precise
              details.
FILES         top
       /usr/local/etc/man_db.conf
              man-db configuration file.

       /usr/share/man
              A global manual page hierarchy.
SEE ALSO         top
       apropos(1), groff(1), less(1), manpath(1), nroff(1), troff(1),
       whatis(1), zsoelim(1), manpath(5), man(7), catman(8), mandb(8)

       Documentation for some packages may be available in other
       formats, such as info(1) or HTML.
HISTORY         top
       1990, 1991 – Originally written by John W. Eaton
       (jwe@che.utexas.edu).

       Dec 23 1992: Rik Faith (faith@cs.unc.edu) applied bug fixes
       supplied by Willem Kasdorp (wkasdo@nikhefk.nikef.nl).

       30th April 1994 – 23rd February 2000: Wilf.
       (G.Wilford@ee.surrey.ac.uk) has been developing and maintaining
       this package with the help of a few dedicated people.

       30th October 1996 – 30th March 2001: Fabrizio Polacco
       <fpolacco@debian.org> maintained and enhanced this package for
       the Debian project, with the help of all the community.

       31st March 2001 – present day: Colin Watson <cjwatson@debian.org>
       is now developing and maintaining man-db.
BUGS         top
       https://savannah.nongnu.org/bugs/?group=man-db
COLOPHON         top
       This page is part of the man-db (manual pager suite) project.
       Information about the project can be found at 
       ⟨http://www.nongnu.org/man-db/⟩.  If you have a bug report for
       this manual page, send it to man-db-devel@nongnu.org.  This page
       was obtained from the project's upstream Git repository
       ⟨https://git.savannah.gnu.org/r/man-db.git⟩ on 2020-12-18.  (At
       that time, the date of the most recent commit that was found in
       the repository was 2020-12-11.)  If you discover any rendering
       problems in this HTML version of the page, or you believe there
       is a better or more up-to-date source for the page, or you have
       corrections or improvements to the information in this COLOPHON
       (which is not part of the original manual page), send a mail to
       man-pages@man7.org

2.8.4                          2018-07-27                         MAN(1)

SSH(1)                 BSD General Commands Manual                SSH(1)
NAME         top
     ssh — OpenSSH remote login client
SYNOPSIS         top
     ssh [-46AaCfGgKkMNnqsTtVvXxYy] [-B bind_interface]
         [-b bind_address] [-c cipher_spec] [-D [bind_address:]port]
         [-E log_file] [-e escape_char] [-F configfile] [-I pkcs11]
         [-i identity_file] [-J destination] [-L address]
         [-l login_name] [-m mac_spec] [-O ctl_cmd] [-o option]
         [-p port] [-Q query_option] [-R address] [-S ctl_path]
         [-W host:port] [-w local_tun[:remote_tun]] destination
         [command]
DESCRIPTION         top
     ssh (SSH client) is a program for logging into a remote machine and
     for executing commands on a remote machine.  It is intended to
     provide secure encrypted communications between two untrusted hosts
     over an insecure network.  X11 connections, arbitrary TCP ports and
     UNIX-domain sockets can also be forwarded over the secure channel.

     ssh connects and logs into the specified destination, which may be
     specified as either [user@]hostname or a URI of the form
     ssh://[user@]hostname[:port].  The user must prove his/her identity
     to the remote machine using one of several methods (see below).

     If a command is specified, it is executed on the remote host
     instead of a login shell.

     The options are as follows:

     -4      Forces ssh to use IPv4 addresses only.

     -6      Forces ssh to use IPv6 addresses only.

     -A      Enables forwarding of connections from an authentication
             agent such as ssh-agent(1).  This can also be specified on
             a per-host basis in a configuration file.

             Agent forwarding should be enabled with caution.  Users
             with the ability to bypass file permissions on the remote
             host (for the agent's UNIX-domain socket) can access the
             local agent through the forwarded connection.  An attacker
             cannot obtain key material from the agent, however they can
             perform operations on the keys that enable them to
             authenticate using the identities loaded into the agent.  A
             safer alternative may be to use a jump host (see -J).

     -a      Disables forwarding of the authentication agent connection.

     -B bind_interface
             Bind to the address of bind_interface before attempting to
             connect to the destination host.  This is only useful on
             systems with more than one address.

     -b bind_address
             Use bind_address on the local machine as the source address
             of the connection.  Only useful on systems with more than
             one address.

     -C      Requests compression of all data (including stdin, stdout,
             stderr, and data for forwarded X11, TCP and UNIX-domain
             connections).  The compression algorithm is the same used
             by gzip(1).  Compression is desirable on modem lines and
             other slow connections, but will only slow down things on
             fast networks.  The default value can be set on a host-by-
             host basis in the configuration files; see the Compression
             option.

     -c cipher_spec
             Selects the cipher specification for encrypting the
             session.  cipher_spec is a comma-separated list of ciphers
             listed in order of preference.  See the Ciphers keyword in
             ssh_config(5) for more information.

     -D [bind_address:]port
             Specifies a local “dynamic” application-level port
             forwarding.  This works by allocating a socket to listen to
             port on the local side, optionally bound to the specified
             bind_address.  Whenever a connection is made to this port,
             the connection is forwarded over the secure channel, and
             the application protocol is then used to determine where to
             connect to from the remote machine.  Currently the SOCKS4
             and SOCKS5 protocols are supported, and ssh will act as a
             SOCKS server.  Only root can forward privileged ports.
             Dynamic port forwardings can also be specified in the
             configuration file.

             IPv6 addresses can be specified by enclosing the address in
             square brackets.  Only the superuser can forward privileged
             ports.  By default, the local port is bound in accordance
             with the GatewayPorts setting.  However, an explicit
             bind_address may be used to bind the connection to a
             specific address.  The bind_address of “localhost”
             indicates that the listening port be bound for local use
             only, while an empty address or ‘*’ indicates that the port
             should be available from all interfaces.

     -E log_file
             Append debug logs to log_file instead of standard error.

     -e escape_char
             Sets the escape character for sessions with a pty (default:
             ‘~’).  The escape character is only recognized at the
             beginning of a line.  The escape character followed by a
             dot (‘.’) closes the connection; followed by control-Z
             suspends the connection; and followed by itself sends the
             escape character once.  Setting the character to “none”
             disables any escapes and makes the session fully
             transparent.

     -F configfile
             Specifies an alternative per-user configuration file.  If a
             configuration file is given on the command line, the
             system-wide configuration file (/etc/ssh/ssh_config) will
             be ignored.  The default for the per-user configuration
             file is ~/.ssh/config.  If set to “none”, no configuration
             files will be read.

     -f      Requests ssh to go to background just before command
             execution.  This is useful if ssh is going to ask for
             passwords or passphrases, but the user wants it in the
             background.  This implies -n.  The recommended way to start
             X11 programs at a remote site is with something like ssh -f
             host xterm.

             If the ExitOnForwardFailure configuration option is set to
             “yes”, then a client started with -f will wait for all
             remote port forwards to be successfully established before
             placing itself in the background.

     -G      Causes ssh to print its configuration after evaluating Host
             and Match blocks and exit.

     -g      Allows remote hosts to connect to local forwarded ports.
             If used on a multiplexed connection, then this option must
             be specified on the master process.

     -I pkcs11
             Specify the PKCS#11 shared library ssh should use to
             communicate with a PKCS#11 token providing keys for user
             authentication.

     -i identity_file
             Selects a file from which the identity (private key) for
             public key authentication is read.  The default is
             ~/.ssh/id_dsa, ~/.ssh/id_ecdsa, ~/.ssh/id_ecdsa_sk,
             ~/.ssh/id_ed25519, ~/.ssh/id_ed25519_sk and ~/.ssh/id_rsa.
             Identity files may also be specified on a per-host basis in
             the configuration file.  It is possible to have multiple -i
             options (and multiple identities specified in configuration
             files).  If no certificates have been explicitly specified
             by the CertificateFile directive, ssh will also try to load
             certificate information from the filename obtained by
             appending -cert.pub to identity filenames.

     -J destination
             Connect to the target host by first making a ssh connection
             to the jump host described by destination and then
             establishing a TCP forwarding to the ultimate destination
             from there.  Multiple jump hops may be specified separated
             by comma characters.  This is a shortcut to specify a
             ProxyJump configuration directive.  Note that configuration
             directives supplied on the command-line generally apply to
             the destination host and not any specified jump hosts.  Use
             ~/.ssh/config to specify configuration for jump hosts.

     -K      Enables GSSAPI-based authentication and forwarding
             (delegation) of GSSAPI credentials to the server.

     -k      Disables forwarding (delegation) of GSSAPI credentials to
             the server.

     -L [bind_address:]port:host:hostport
     -L [bind_address:]port:remote_socket
     -L local_socket:host:hostport
     -L local_socket:remote_socket
             Specifies that connections to the given TCP port or Unix
             socket on the local (client) host are to be forwarded to
             the given host and port, or Unix socket, on the remote
             side.  This works by allocating a socket to listen to
             either a TCP port on the local side, optionally bound to
             the specified bind_address, or to a Unix socket.  Whenever
             a connection is made to the local port or socket, the
             connection is forwarded over the secure channel, and a
             connection is made to either host port hostport, or the
             Unix socket remote_socket, from the remote machine.

             Port forwardings can also be specified in the configuration
             file.  Only the superuser can forward privileged ports.
             IPv6 addresses can be specified by enclosing the address in
             square brackets.

             By default, the local port is bound in accordance with the
             GatewayPorts setting.  However, an explicit bind_address
             may be used to bind the connection to a specific address.
             The bind_address of “localhost” indicates that the
             listening port be bound for local use only, while an empty
             address or ‘*’ indicates that the port should be available
             from all interfaces.

     -l login_name
             Specifies the user to log in as on the remote machine.
             This also may be specified on a per-host basis in the
             configuration file.

     -M      Places the ssh client into “master” mode for connection
             sharing.  Multiple -M options places ssh into “master” mode
             but with confirmation required using ssh-askpass(1) before
             each operation that changes the multiplexing state (e.g.
             opening a new session).  Refer to the description of
             ControlMaster in ssh_config(5) for details.

     -m mac_spec
             A comma-separated list of MAC (message authentication code)
             algorithms, specified in order of preference.  See the MACs
             keyword for more information.

     -N      Do not execute a remote command.  This is useful for just
             forwarding ports.

     -n      Redirects stdin from /dev/null (actually, prevents reading
             from stdin).  This must be used when ssh is run in the
             background.  A common trick is to use this to run X11
             programs on a remote machine.  For example, ssh -n
             shadows.cs.hut.fi emacs & will start an emacs on
             shadows.cs.hut.fi, and the X11 connection will be
             automatically forwarded over an encrypted channel.  The ssh
             program will be put in the background.  (This does not work
             if ssh needs to ask for a password or passphrase; see also
             the -f option.)

     -O ctl_cmd
             Control an active connection multiplexing master process.
             When the -O option is specified, the ctl_cmd argument is
             interpreted and passed to the master process.  Valid
             commands are: “check” (check that the master process is
             running), “forward” (request forwardings without command
             execution), “cancel” (cancel forwardings), “exit” (request
             the master to exit), and “stop” (request the master to stop
             accepting further multiplexing requests).

     -o option
             Can be used to give options in the format used in the
             configuration file.  This is useful for specifying options
             for which there is no separate command-line flag.  For full
             details of the options listed below, and their possible
             values, see ssh_config(5).

                   AddKeysToAgent
                   AddressFamily
                   BatchMode
                   BindAddress
                   CanonicalDomains
                   CanonicalizeFallbackLocal
                   CanonicalizeHostname
                   CanonicalizeMaxDots
                   CanonicalizePermittedCNAMEs
                   CASignatureAlgorithms
                   CertificateFile
                   ChallengeResponseAuthentication
                   CheckHostIP
                   Ciphers
                   ClearAllForwardings
                   Compression
                   ConnectionAttempts
                   ConnectTimeout
                   ControlMaster
                   ControlPath
                   ControlPersist
                   DynamicForward
                   EscapeChar
                   ExitOnForwardFailure
                   FingerprintHash
                   ForwardAgent
                   ForwardX11
                   ForwardX11Timeout
                   ForwardX11Trusted
                   GatewayPorts
                   GlobalKnownHostsFile
                   GSSAPIAuthentication
                   GSSAPIDelegateCredentials
                   HashKnownHosts
                   Host
                   HostbasedAuthentication
                   HostbasedKeyTypes
                   HostKeyAlgorithms
                   HostKeyAlias
                   Hostname
                   IdentitiesOnly
                   IdentityAgent
                   IdentityFile
                   IPQoS
                   KbdInteractiveAuthentication
                   KbdInteractiveDevices
                   KexAlgorithms
                   LocalCommand
                   LocalForward
                   LogLevel
                   MACs
                   Match
                   NoHostAuthenticationForLocalhost
                   NumberOfPasswordPrompts
                   PasswordAuthentication
                   PermitLocalCommand
                   PKCS11Provider
                   Port
                   PreferredAuthentications
                   ProxyCommand
                   ProxyJump
                   ProxyUseFdpass
                   PubkeyAcceptedKeyTypes
                   PubkeyAuthentication
                   RekeyLimit
                   RemoteCommand
                   RemoteForward
                   RequestTTY
                   SendEnv
                   ServerAliveInterval
                   ServerAliveCountMax
                   SetEnv
                   StreamLocalBindMask
                   StreamLocalBindUnlink
                   StrictHostKeyChecking
                   TCPKeepAlive
                   Tunnel
                   TunnelDevice
                   UpdateHostKeys
                   User
                   UserKnownHostsFile
                   VerifyHostKeyDNS
                   VisualHostKey
                   XAuthLocation

     -p port
             Port to connect to on the remote host.  This can be
             specified on a per-host basis in the configuration file.

     -Q query_option
             Queries ssh for the algorithms supported for the specified
             version 2.  The available features are: cipher (supported
             symmetric ciphers), cipher-auth (supported symmetric
             ciphers that support authenticated encryption), help
             (supported query terms for use with the -Q flag), mac
             (supported message integrity codes), kex (key exchange
             algorithms), key (key types), key-cert (certificate key
             types), key-plain (non-certificate key types), key-sig (all
             key types and signature algorithms), protocol-version
             (supported SSH protocol versions), and sig (supported
             signature algorithms).  Alternatively, any keyword from
             ssh_config(5) or sshd_config(5) that takes an algorithm
             list may be used as an alias for the corresponding
             query_option.

     -q      Quiet mode.  Causes most warning and diagnostic messages to
             be suppressed.

     -R [bind_address:]port:host:hostport
     -R [bind_address:]port:local_socket
     -R remote_socket:host:hostport
     -R remote_socket:local_socket
     -R [bind_address:]port
             Specifies that connections to the given TCP port or Unix
             socket on the remote (server) host are to be forwarded to
             the local side.

             This works by allocating a socket to listen to either a TCP
             port or to a Unix socket on the remote side.  Whenever a
             connection is made to this port or Unix socket, the
             connection is forwarded over the secure channel, and a
             connection is made from the local machine to either an
             explicit destination specified by host port hostport, or
             local_socket, or, if no explicit destination was specified,
             ssh will act as a SOCKS 4/5 proxy and forward connections
             to the destinations requested by the remote SOCKS client.

             Port forwardings can also be specified in the configuration
             file.  Privileged ports can be forwarded only when logging
             in as root on the remote machine.  IPv6 addresses can be
             specified by enclosing the address in square brackets.

             By default, TCP listening sockets on the server will be
             bound to the loopback interface only.  This may be
             overridden by specifying a bind_address.  An empty
             bind_address, or the address ‘*’, indicates that the remote
             socket should listen on all interfaces.  Specifying a
             remote bind_address will only succeed if the server's
             GatewayPorts option is enabled (see sshd_config(5)).

             If the port argument is ‘0’, the listen port will be
             dynamically allocated on the server and reported to the
             client at run time.  When used together with -O forward the
             allocated port will be printed to the standard output.

     -S ctl_path
             Specifies the location of a control socket for connection
             sharing, or the string “none” to disable connection
             sharing.  Refer to the description of ControlPath and
             ControlMaster in ssh_config(5) for details.

     -s      May be used to request invocation of a subsystem on the
             remote system.  Subsystems facilitate the use of SSH as a
             secure transport for other applications (e.g. sftp(1)).
             The subsystem is specified as the remote command.

     -T      Disable pseudo-terminal allocation.

     -t      Force pseudo-terminal allocation.  This can be used to
             execute arbitrary screen-based programs on a remote
             machine, which can be very useful, e.g. when implementing
             menu services.  Multiple -t options force tty allocation,
             even if ssh has no local tty.

     -V      Display the version number and exit.

     -v      Verbose mode.  Causes ssh to print debugging messages about
             its progress.  This is helpful in debugging connection,
             authentication, and configuration problems.  Multiple -v
             options increase the verbosity.  The maximum is 3.

     -W host:port
             Requests that standard input and output on the client be
             forwarded to host on port over the secure channel.  Implies
             -N, -T, ExitOnForwardFailure and ClearAllForwardings,
             though these can be overridden in the configuration file or
             using -o command line options.

     -w local_tun[:remote_tun]
             Requests tunnel device forwarding with the specified tun(4)
             devices between the client (local_tun) and the server
             (remote_tun).

             The devices may be specified by numerical ID or the keyword
             “any”, which uses the next available tunnel device.  If
             remote_tun is not specified, it defaults to “any”.  See
             also the Tunnel and TunnelDevice directives in
             ssh_config(5).

             If the Tunnel directive is unset, it will be set to the
             default tunnel mode, which is “point-to-point”.  If a
             different Tunnel forwarding mode it desired, then it should
             be specified before -w.

     -X      Enables X11 forwarding.  This can also be specified on a
             per-host basis in a configuration file.

             X11 forwarding should be enabled with caution.  Users with
             the ability to bypass file permissions on the remote host
             (for the user's X authorization database) can access the
             local X11 display through the forwarded connection.  An
             attacker may then be able to perform activities such as
             keystroke monitoring.

             For this reason, X11 forwarding is subjected to X11
             SECURITY extension restrictions by default.  Please refer
             to the ssh -Y option and the ForwardX11Trusted directive in
             ssh_config(5) for more information.

     -x      Disables X11 forwarding.

     -Y      Enables trusted X11 forwarding.  Trusted X11 forwardings
             are not subjected to the X11 SECURITY extension controls.

     -y      Send log information using the syslog(3) system module.  By
             default this information is sent to stderr.

     ssh may additionally obtain configuration data from a per-user
     configuration file and a system-wide configuration file.  The file
     format and configuration options are described in ssh_config(5).
AUTHENTICATION         top
     The OpenSSH SSH client supports SSH protocol 2.

     The methods available for authentication are: GSSAPI-based
     authentication, host-based authentication, public key
     authentication, challenge-response authentication, and password
     authentication.  Authentication methods are tried in the order
     specified above, though PreferredAuthentications can be used to
     change the default order.

     Host-based authentication works as follows: If the machine the user
     logs in from is listed in /etc/hosts.equiv or /etc/shosts.equiv on
     the remote machine, the user is non-root and the user names are the
     same on both sides, or if the files ~/.rhosts or ~/.shosts exist in
     the user's home directory on the remote machine and contain a line
     containing the name of the client machine and the name of the user
     on that machine, the user is considered for login.  Additionally,
     the server must be able to verify the client's host key (see the
     description of /etc/ssh/ssh_known_hosts and ~/.ssh/known_hosts,
     below) for login to be permitted.  This authentication method
     closes security holes due to IP spoofing, DNS spoofing, and routing
     spoofing.  [Note to the administrator: /etc/hosts.equiv, ~/.rhosts,
     and the rlogin/rsh protocol in general, are inherently insecure and
     should be disabled if security is desired.]

     Public key authentication works as follows: The scheme is based on
     public-key cryptography, using cryptosystems where encryption and
     decryption are done using separate keys, and it is unfeasible to
     derive the decryption key from the encryption key.  The idea is
     that each user creates a public/private key pair for authentication
     purposes.  The server knows the public key, and only the user knows
     the private key.  ssh implements public key authentication protocol
     automatically, using one of the DSA, ECDSA, Ed25519 or RSA
     algorithms.  The HISTORY section of ssl(8) contains a brief
     discussion of the DSA and RSA algorithms.

     The file ~/.ssh/authorized_keys lists the public keys that are
     permitted for logging in.  When the user logs in, the ssh program
     tells the server which key pair it would like to use for
     authentication.  The client proves that it has access to the
     private key and the server checks that the corresponding public key
     is authorized to accept the account.

     The server may inform the client of errors that prevented public
     key authentication from succeeding after authentication completes
     using a different method.  These may be viewed by increasing the
     LogLevel to DEBUG or higher (e.g. by using the -v flag).

     The user creates his/her key pair by running ssh-keygen(1).  This
     stores the private key in ~/.ssh/id_dsa (DSA), ~/.ssh/id_ecdsa
     (ECDSA), ~/.ssh/id_ecdsa_sk (authenticator-hosted ECDSA),
     ~/.ssh/id_ed25519 (Ed25519), ~/.ssh/id_ed25519_sk (authenticator-
     hosted Ed25519), or ~/.ssh/id_rsa (RSA) and stores the public key
     in ~/.ssh/id_dsa.pub (DSA), ~/.ssh/id_ecdsa.pub (ECDSA),
     ~/.ssh/id_ecdsa_sk.pub (authenticator-hosted ECDSA),
     ~/.ssh/id_ed25519.pub (Ed25519), ~/.ssh/id_ed25519_sk.pub
     (authenticator-hosted Ed25519), or ~/.ssh/id_rsa.pub (RSA) in the
     user's home directory.  The user should then copy the public key to
     ~/.ssh/authorized_keys in his/her home directory on the remote
     machine.  The authorized_keys file corresponds to the conventional
     ~/.rhosts file, and has one key per line, though the lines can be
     very long.  After this, the user can log in without giving the
     password.

     A variation on public key authentication is available in the form
     of certificate authentication: instead of a set of public/private
     keys, signed certificates are used.  This has the advantage that a
     single trusted certification authority can be used in place of many
     public/private keys.  See the CERTIFICATES section of ssh-keygen(1)
     for more information.

     The most convenient way to use public key or certificate
     authentication may be with an authentication agent.  See
     ssh-agent(1) and (optionally) the AddKeysToAgent directive in
     ssh_config(5) for more information.

     Challenge-response authentication works as follows: The server
     sends an arbitrary "challenge" text, and prompts for a response.
     Examples of challenge-response authentication include BSD
     Authentication (see login.conf(5)) and PAM (some non-OpenBSD
     systems).

     Finally, if other authentication methods fail, ssh prompts the user
     for a password.  The password is sent to the remote host for
     checking; however, since all communications are encrypted, the
     password cannot be seen by someone listening on the network.

     ssh automatically maintains and checks a database containing
     identification for all hosts it has ever been used with.  Host keys
     are stored in ~/.ssh/known_hosts in the user's home directory.
     Additionally, the file /etc/ssh/ssh_known_hosts is automatically
     checked for known hosts.  Any new hosts are automatically added to
     the user's file.  If a host's identification ever changes, ssh
     warns about this and disables password authentication to prevent
     server spoofing or man-in-the-middle attacks, which could otherwise
     be used to circumvent the encryption.  The StrictHostKeyChecking
     option can be used to control logins to machines whose host key is
     not known or has changed.

     When the user's identity has been accepted by the server, the
     server either executes the given command in a non-interactive
     session or, if no command has been specified, logs into the machine
     and gives the user a normal shell as an interactive session.  All
     communication with the remote command or shell will be
     automatically encrypted.

     If an interactive session is requested ssh by default will only
     request a pseudo-terminal (pty) for interactive sessions when the
     client has one.  The flags -T and -t can be used to override this
     behaviour.

     If a pseudo-terminal has been allocated the user may use the escape
     characters noted below.

     If no pseudo-terminal has been allocated, the session is
     transparent and can be used to reliably transfer binary data.  On
     most systems, setting the escape character to “none” will also make
     the session transparent even if a tty is used.

     The session terminates when the command or shell on the remote
     machine exits and all X11 and TCP connections have been closed.
ESCAPE CHARACTERS         top
     When a pseudo-terminal has been requested, ssh supports a number of
     functions through the use of an escape character.

     A single tilde character can be sent as ~~ or by following the
     tilde by a character other than those described below.  The escape
     character must always follow a newline to be interpreted as
     special.  The escape character can be changed in configuration
     files using the EscapeChar configuration directive or on the
     command line by the -e option.

     The supported escapes (assuming the default ‘~’) are:

     ~.      Disconnect.

     ~^Z     Background ssh.

     ~#      List forwarded connections.

     ~&      Background ssh at logout when waiting for forwarded
             connection / X11 sessions to terminate.

     ~?      Display a list of escape characters.

     ~B      Send a BREAK to the remote system (only useful if the peer
             supports it).

     ~C      Open command line.  Currently this allows the addition of
             port forwardings using the -L, -R and -D options (see
             above).  It also allows the cancellation of existing port-
             forwardings with -KL[bind_address:]port for local,
             -KR[bind_address:]port for remote and
             -KD[bind_address:]port for dynamic port-forwardings.
             !command allows the user to execute a local command if the
             PermitLocalCommand option is enabled in ssh_config(5).
             Basic help is available, using the -h option.

     ~R      Request rekeying of the connection (only useful if the peer
             supports it).

     ~V      Decrease the verbosity (LogLevel) when errors are being
             written to stderr.

     ~v      Increase the verbosity (LogLevel) when errors are being
             written to stderr.
TCP FORWARDING         top
     Forwarding of arbitrary TCP connections over a secure channel can
     be specified either on the command line or in a configuration file.
     One possible application of TCP forwarding is a secure connection
     to a mail server; another is going through firewalls.

     In the example below, we look at encrypting communication for an
     IRC client, even though the IRC server it connects to does not
     directly support encrypted communication.  This works as follows:
     the user connects to the remote host using ssh, specifying the
     ports to be used to forward the connection.  After that it is
     possible to start the program locally, and ssh will encrypt and
     forward the connection to the remote server.

     The following example tunnels an IRC session from the client to an
     IRC server at “server.example.com”, joining channel “#users”,
     nickname “pinky”, using the standard IRC port, 6667:

         $ ssh -f -L 6667:localhost:6667 server.example.com sleep 10
         $ irc -c '#users' pinky IRC/127.0.0.1

     The -f option backgrounds ssh and the remote command “sleep 10” is
     specified to allow an amount of time (10 seconds, in the example)
     to start the program which is going to use the tunnel.  If no
     connections are made within the time specified, ssh will exit.
X11 FORWARDING         top
     If the ForwardX11 variable is set to “yes” (or see the description
     of the -X, -x, and -Y options above) and the user is using X11 (the
     DISPLAY environment variable is set), the connection to the X11
     display is automatically forwarded to the remote side in such a way
     that any X11 programs started from the shell (or command) will go
     through the encrypted channel, and the connection to the real X
     server will be made from the local machine.  The user should not
     manually set DISPLAY.  Forwarding of X11 connections can be
     configured on the command line or in configuration files.

     The DISPLAY value set by ssh will point to the server machine, but
     with a display number greater than zero.  This is normal, and
     happens because ssh creates a “proxy” X server on the server
     machine for forwarding the connections over the encrypted channel.

     ssh will also automatically set up Xauthority data on the server
     machine.  For this purpose, it will generate a random authorization
     cookie, store it in Xauthority on the server, and verify that any
     forwarded connections carry this cookie and replace it by the real
     cookie when the connection is opened.  The real authentication
     cookie is never sent to the server machine (and no cookies are sent
     in the plain).

     If the ForwardAgent variable is set to “yes” (or see the
     description of the -A and -a options above) and the user is using
     an authentication agent, the connection to the agent is
     automatically forwarded to the remote side.
VERIFYING HOST KEYS         top
     When connecting to a server for the first time, a fingerprint of
     the server's public key is presented to the user (unless the option
     StrictHostKeyChecking has been disabled).  Fingerprints can be
     determined using ssh-keygen(1):

           $ ssh-keygen -l -f /etc/ssh/ssh_host_rsa_key

     If the fingerprint is already known, it can be matched and the key
     can be accepted or rejected.  If only legacy (MD5) fingerprints for
     the server are available, the ssh-keygen(1) -E option may be used
     to downgrade the fingerprint algorithm to match.

     Because of the difficulty of comparing host keys just by looking at
     fingerprint strings, there is also support to compare host keys
     visually, using random art.  By setting the VisualHostKey option to
     “yes”, a small ASCII graphic gets displayed on every login to a
     server, no matter if the session itself is interactive or not.  By
     learning the pattern a known server produces, a user can easily
     find out that the host key has changed when a completely different
     pattern is displayed.  Because these patterns are not unambiguous
     however, a pattern that looks similar to the pattern remembered
     only gives a good probability that the host key is the same, not
     guaranteed proof.

     To get a listing of the fingerprints along with their random art
     for all known hosts, the following command line can be used:

           $ ssh-keygen -lv -f ~/.ssh/known_hosts

     If the fingerprint is unknown, an alternative method of
     verification is available: SSH fingerprints verified by DNS.  An
     additional resource record (RR), SSHFP, is added to a zonefile and
     the connecting client is able to match the fingerprint with that of
     the key presented.

     In this example, we are connecting a client to a server,
     “host.example.com”.  The SSHFP resource records should first be
     added to the zonefile for host.example.com:

           $ ssh-keygen -r host.example.com.

     The output lines will have to be added to the zonefile.  To check
     that the zone is answering fingerprint queries:

           $ dig -t SSHFP host.example.com

     Finally the client connects:

           $ ssh -o "VerifyHostKeyDNS ask" host.example.com
           [...]
           Matching host key fingerprint found in DNS.
           Are you sure you want to continue connecting (yes/no)?

     See the VerifyHostKeyDNS option in ssh_config(5) for more
     information.
SSH-BASED VIRTUAL PRIVATE NETWORKS         top
     ssh contains support for Virtual Private Network (VPN) tunnelling
     using the tun(4) network pseudo-device, allowing two networks to be
     joined securely.  The sshd_config(5) configuration option
     PermitTunnel controls whether the server supports this, and at what
     level (layer 2 or 3 traffic).

     The following example would connect client network 10.0.50.0/24
     with remote network 10.0.99.0/24 using a point-to-point connection
     from 10.1.1.1 to 10.1.1.2, provided that the SSH server running on
     the gateway to the remote network, at 192.168.1.15, allows it.

     On the client:

           # ssh -f -w 0:1 192.168.1.15 true
           # ifconfig tun0 10.1.1.1 10.1.1.2 netmask 255.255.255.252
           # route add 10.0.99.0/24 10.1.1.2

     On the server:

           # ifconfig tun1 10.1.1.2 10.1.1.1 netmask 255.255.255.252
           # route add 10.0.50.0/24 10.1.1.1

     Client access may be more finely tuned via the
     /root/.ssh/authorized_keys file (see below) and the PermitRootLogin
     server option.  The following entry would permit connections on
     tun(4) device 1 from user “jane” and on tun device 2 from user
     “john”, if PermitRootLogin is set to “forced-commands-only”:

       tunnel="1",command="sh /etc/netstart tun1" ssh-rsa ... jane
       tunnel="2",command="sh /etc/netstart tun2" ssh-rsa ... john

     Since an SSH-based setup entails a fair amount of overhead, it may
     be more suited to temporary setups, such as for wireless VPNs.
     More permanent VPNs are better provided by tools such as
     ipsecctl(8) and isakmpd(8).
ENVIRONMENT         top
     ssh will normally set the following environment variables:

     DISPLAY               The DISPLAY variable indicates the location
                           of the X11 server.  It is automatically set
                           by ssh to point to a value of the form
                           “hostname:n”, where “hostname” indicates the
                           host where the shell runs, and ‘n’ is an
                           integer ≥ 1.  ssh uses this special value to
                           forward X11 connections over the secure
                           channel.  The user should normally not set
                           DISPLAY explicitly, as that will render the
                           X11 connection insecure (and will require the
                           user to manually copy any required
                           authorization cookies).

     HOME                  Set to the path of the user's home directory.

     LOGNAME               Synonym for USER; set for compatibility with
                           systems that use this variable.

     MAIL                  Set to the path of the user's mailbox.

     PATH                  Set to the default PATH, as specified when
                           compiling ssh.

     SSH_ASKPASS           If ssh needs a passphrase, it will read the
                           passphrase from the current terminal if it
                           was run from a terminal.  If ssh does not
                           have a terminal associated with it but
                           DISPLAY and SSH_ASKPASS are set, it will
                           execute the program specified by SSH_ASKPASS
                           and open an X11 window to read the
                           passphrase.  This is particularly useful when
                           calling ssh from a .xsession or related
                           script.  (Note that on some machines it may
                           be necessary to redirect the input from
                           /dev/null to make this work.)

     SSH_ASKPASS_REQUIRE   Allows further control over the use of an
                           askpass program.  If this variable is set to
                           “never” then ssh will never attempt to use
                           one.  If it is set to “prefer”, then ssh will
                           prefer to use the askpass program instead of
                           the TTY when requesting passwords.  Finally,
                           if the variable is set to “force”, then the
                           askpass program will be used for all
                           passphrase input regardless of whether
                           DISPLAY is set.

     SSH_AUTH_SOCK         Identifies the path of a UNIX-domain socket
                           used to communicate with the agent.

     SSH_CONNECTION        Identifies the client and server ends of the
                           connection.  The variable contains four
                           space-separated values: client IP address,
                           client port number, server IP address, and
                           server port number.

     SSH_ORIGINAL_COMMAND  This variable contains the original command
                           line if a forced command is executed.  It can
                           be used to extract the original arguments.

     SSH_TTY               This is set to the name of the tty (path to
                           the device) associated with the current shell
                           or command.  If the current session has no
                           tty, this variable is not set.

     SSH_TUNNEL            Optionally set by sshd(8) to contain the
                           interface names assigned if tunnel forwarding
                           was requested by the client.

     SSH_USER_AUTH         Optionally set by sshd(8), this variable may
                           contain a pathname to a file that lists the
                           authentication methods successfully used when
                           the session was established, including any
                           public keys that were used.

     TZ                    This variable is set to indicate the present
                           time zone if it was set when the daemon was
                           started (i.e. the daemon passes the value on
                           to new connections).

     USER                  Set to the name of the user logging in.

     Additionally, ssh reads ~/.ssh/environment, and adds lines of the
     format “VARNAME=value” to the environment if the file exists and
     users are allowed to change their environment.  For more
     information, see the PermitUserEnvironment option in
     sshd_config(5).
FILES         top
     ~/.rhosts
             This file is used for host-based authentication (see
             above).  On some machines this file may need to be world-
             readable if the user's home directory is on an NFS
             partition, because sshd(8) reads it as root.  Additionally,
             this file must be owned by the user, and must not have
             write permissions for anyone else.  The recommended
             permission for most machines is read/write for the user,
             and not accessible by others.

     ~/.shosts
             This file is used in exactly the same way as .rhosts, but
             allows host-based authentication without permitting login
             with rlogin/rsh.

     ~/.ssh/
             This directory is the default location for all user-
             specific configuration and authentication information.
             There is no general requirement to keep the entire contents
             of this directory secret, but the recommended permissions
             are read/write/execute for the user, and not accessible by
             others.

     ~/.ssh/authorized_keys
             Lists the public keys (DSA, ECDSA, Ed25519, RSA) that can
             be used for logging in as this user.  The format of this
             file is described in the sshd(8) manual page.  This file is
             not highly sensitive, but the recommended permissions are
             read/write for the user, and not accessible by others.

     ~/.ssh/config
             This is the per-user configuration file.  The file format
             and configuration options are described in ssh_config(5).
             Because of the potential for abuse, this file must have
             strict permissions: read/write for the user, and not
             writable by others.

     ~/.ssh/environment
             Contains additional definitions for environment variables;
             see ENVIRONMENT, above.

     ~/.ssh/id_dsa
     ~/.ssh/id_ecdsa
     ~/.ssh/id_ecdsa_sk
     ~/.ssh/id_ed25519
     ~/.ssh/id_ed25519_sk
     ~/.ssh/id_rsa
             Contains the private key for authentication.  These files
             contain sensitive data and should be readable by the user
             but not accessible by others (read/write/execute).  ssh
             will simply ignore a private key file if it is accessible
             by others.  It is possible to specify a passphrase when
             generating the key which will be used to encrypt the
             sensitive part of this file using AES-128.

     ~/.ssh/id_dsa.pub
     ~/.ssh/id_ecdsa.pub
     ~/.ssh/id_ecdsa_sk.pub
     ~/.ssh/id_ed25519.pub
     ~/.ssh/id_ed25519_sk.pub
     ~/.ssh/id_rsa.pub
             Contains the public key for authentication.  These files
             are not sensitive and can (but need not) be readable by
             anyone.

     ~/.ssh/known_hosts
             Contains a list of host keys for all hosts the user has
             logged into that are not already in the systemwide list of
             known host keys.  See sshd(8) for further details of the
             format of this file.

     ~/.ssh/rc
             Commands in this file are executed by ssh when the user
             logs in, just before the user's shell (or command) is
             started.  See the sshd(8) manual page for more information.

     /etc/hosts.equiv
             This file is for host-based authentication (see above).  It
             should only be writable by root.

     /etc/shosts.equiv
             This file is used in exactly the same way as hosts.equiv,
             but allows host-based authentication without permitting
             login with rlogin/rsh.

     /etc/ssh/ssh_config
             Systemwide configuration file.  The file format and
             configuration options are described in ssh_config(5).

     /etc/ssh/ssh_host_key
     /etc/ssh/ssh_host_dsa_key
     /etc/ssh/ssh_host_ecdsa_key
     /etc/ssh/ssh_host_ed25519_key
     /etc/ssh/ssh_host_rsa_key
             These files contain the private parts of the host keys and
             are used for host-based authentication.

     /etc/ssh/ssh_known_hosts
             Systemwide list of known host keys.  This file should be
             prepared by the system administrator to contain the public
             host keys of all machines in the organization.  It should
             be world-readable.  See sshd(8) for further details of the
             format of this file.

     /etc/ssh/sshrc
             Commands in this file are executed by ssh when the user
             logs in, just before the user's shell (or command) is
             started.  See the sshd(8) manual page for more information.
EXIT STATUS         top
     ssh exits with the exit status of the remote command or with 255 if
     an error occurred.
SEE ALSO         top
     scp(1), sftp(1), ssh-add(1), ssh-agent(1), ssh-keygen(1),
     ssh-keyscan(1), tun(4), ssh_config(5), ssh-keysign(8), sshd(8)
STANDARDS         top
     S. Lehtinen and C. Lonvick, The Secure Shell (SSH) Protocol
     Assigned Numbers, RFC 4250, January 2006.

     T. Ylonen and C. Lonvick, The Secure Shell (SSH) Protocol
     Architecture, RFC 4251, January 2006.

     T. Ylonen and C. Lonvick, The Secure Shell (SSH) Authentication
     Protocol, RFC 4252, January 2006.

     T. Ylonen and C. Lonvick, The Secure Shell (SSH) Transport Layer
     Protocol, RFC 4253, January 2006.

     T. Ylonen and C. Lonvick, The Secure Shell (SSH) Connection
     Protocol, RFC 4254, January 2006.

     J. Schlyter and W. Griffin, Using DNS to Securely Publish Secure
     Shell (SSH) Key Fingerprints, RFC 4255, January 2006.

     F. Cusack and M. Forssen, Generic Message Exchange Authentication
     for the Secure Shell Protocol (SSH), RFC 4256, January 2006.

     J. Galbraith and P. Remaker, The Secure Shell (SSH) Session Channel
     Break Extension, RFC 4335, January 2006.

     M. Bellare, T. Kohno, and C. Namprempre, The Secure Shell (SSH)
     Transport Layer Encryption Modes, RFC 4344, January 2006.

     B. Harris, Improved Arcfour Modes for the Secure Shell (SSH)
     Transport Layer Protocol, RFC 4345, January 2006.

     M. Friedl, N. Provos, and W. Simpson, Diffie-Hellman Group Exchange
     for the Secure Shell (SSH) Transport Layer Protocol, RFC 4419,
     March 2006.

     J. Galbraith and R. Thayer, The Secure Shell (SSH) Public Key File
     Format, RFC 4716, November 2006.

     D. Stebila and J. Green, Elliptic Curve Algorithm Integration in
     the Secure Shell Transport Layer, RFC 5656, December 2009.

     A. Perrig and D. Song, Hash Visualization: a New Technique to
     improve Real-World Security, 1999, International Workshop on
     Cryptographic Techniques and E-Commerce (CrypTEC '99).
AUTHORS         top
     OpenSSH is a derivative of the original and free ssh 1.2.12 release
     by Tatu Ylonen.  Aaron Campbell, Bob Beck, Markus Friedl, Niels
     Provos, Theo de Raadt and Dug Song removed many bugs, re-added
     newer features and created OpenSSH.  Markus Friedl contributed the
     support for SSH protocol versions 1.5 and 2.0.
COLOPHON         top
     This page is part of the openssh (Portable OpenSSH) project.
     Information about the project can be found at
     http://www.openssh.com/portable.html.  If you have a bug report for
     this manual page, see ⟨http://www.openssh.com/report.html⟩.  This
     page was obtained from the tarball openssh-8.4p1.tar.gz fetched
     from ⟨http://ftp.eu.openbsd.org/pub/OpenBSD/OpenSSH/portable/⟩ on
     2020-12-18.  If you discover any rendering problems in this HTML
     version of the page, or you believe there is a better or more up-
     to-date source for the page, or you have corrections or
     improvements to the information in this COLOPHON (which is not part
     of the original manual page), send a mail to man-pages@man7.org

BSD                           July 15, 2020                          BSD

